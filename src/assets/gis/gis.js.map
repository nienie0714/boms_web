{"version":3,"sources":["webpack://gis/webpack/universalModuleDefinition","webpack://gis/webpack/bootstrap","webpack://gis/./node_modules/ol/extent.js","webpack://gis/./node_modules/ol/events.js","webpack://gis/./node_modules/ol/util.js","webpack://gis/./node_modules/ol/events/EventType.js","webpack://gis/./node_modules/ol/TileState.js","webpack://gis/./node_modules/ol/geom/GeometryType.js","webpack://gis/./node_modules/ol/render/canvas.js","webpack://gis/./node_modules/ol/proj/Projection.js","webpack://gis/./node_modules/ol/proj/epsg3857.js","webpack://gis/./node_modules/ol/proj/epsg4326.js","webpack://gis/./node_modules/ol/proj/projections.js","webpack://gis/./node_modules/ol/proj/transforms.js","webpack://gis/./node_modules/ol/proj.js","webpack://gis/./node_modules/ol/math.js","webpack://gis/./node_modules/ol/obj.js","webpack://gis/./node_modules/ol/asserts.js","webpack://gis/./node_modules/ol/dom.js","webpack://gis/./node_modules/ol/transform.js","webpack://gis/./node_modules/ol/array.js","webpack://gis/./node_modules/ol/ImageState.js","webpack://gis/./node_modules/ol/Object.js","webpack://gis/./node_modules/ol/ViewHint.js","webpack://gis/./node_modules/ol/functions.js","webpack://gis/./node_modules/ol/MapBrowserEventType.js","webpack://gis/./node_modules/ol/css.js","webpack://gis/./node_modules/ol/source/State.js","webpack://gis/./node_modules/ol/tilecoord.js","webpack://gis/./node_modules/ol/events/condition.js","webpack://gis/./node_modules/ol/events/Event.js","webpack://gis/./node_modules/ol/size.js","webpack://gis/./node_modules/ol/geom/GeometryLayout.js","webpack://gis/./node_modules/ol/has.js","webpack://gis/./node_modules/ol/proj/Units.js","webpack://gis/./node_modules/ol/interaction/Interaction.js","webpack://gis/./node_modules/ol/easing.js","webpack://gis/./node_modules/ol/coordinate.js","webpack://gis/./node_modules/ol/layer/Property.js","webpack://gis/./node_modules/ol/tilegrid.js","webpack://gis/./node_modules/ol/ViewProperty.js","webpack://gis/./node_modules/ol/control/Control.js","webpack://gis/./node_modules/ol/LayerType.js","webpack://gis/./node_modules/ol/Collection.js","webpack://gis/./node_modules/ol/extent/Relationship.js","webpack://gis/./node_modules/ol/tileurlfunction.js","webpack://gis/./node_modules/ol/geom/Geometry.js","webpack://gis/./node_modules/ol/geom/SimpleGeometry.js","webpack://gis/./node_modules/ol/reproj/common.js","webpack://gis/./node_modules/ol/CollectionEventType.js","webpack://gis/./node_modules/ol/pointer/EventType.js","webpack://gis/./node_modules/ol/MapProperty.js","webpack://gis/./node_modules/ol/interaction/Pointer.js","webpack://gis/./node_modules/ol/reproj/Tile.js","webpack://gis/./node_modules/ol/source/TileImage.js","webpack://gis/./node_modules/ol/geom/flat/deflate.js","webpack://gis/./node_modules/ol/geom/flat/inflate.js","webpack://gis/./node_modules/ol/render/EventType.js","webpack://gis/./node_modules/ol/OverlayPositioning.js","webpack://gis/./node_modules/ol/geom/flat/closest.js","webpack://gis/./node_modules/ol/geom/flat/transform.js","webpack://gis/./node_modules/ol/geom/Point.js","webpack://gis/./node_modules/ol/events/Target.js","webpack://gis/./node_modules/ol/color.js","webpack://gis/./node_modules/ol/colorlike.js","webpack://gis/./node_modules/ol/layer/Layer.js","webpack://gis/./node_modules/ol/uri.js","webpack://gis/./node_modules/ol/geom/LinearRing.js","webpack://gis/./node_modules/ol/geom/Polygon.js","webpack://gis/./node_modules/ol/Feature.js","webpack://gis/./node_modules/ol/geom/flat/simplify.js","webpack://gis/./node_modules/ol/Tile.js","webpack://gis/./node_modules/ol/ObjectEventType.js","webpack://gis/./node_modules/ol/geom/flat/contains.js","webpack://gis/./src/core/cache.js","webpack://gis/./node_modules/ol/MapEventType.js","webpack://gis/./node_modules/ol/reproj.js","webpack://gis/./node_modules/ol/rotationconstraint.js","webpack://gis/./node_modules/ol/MapBrowserPointerEvent.js","webpack://gis/./node_modules/ol/source/WMSServerType.js","webpack://gis/./node_modules/ol/loadingstrategy.js","webpack://gis/./node_modules/ol/source/VectorEventType.js","webpack://gis/./node_modules/ol/structs/RBush.js","webpack://gis/./node_modules/ol/source/Vector.js","webpack://gis/./node_modules/ol/source/XYZ.js","webpack://gis/./node_modules/ol/source/Tile.js","webpack://gis/./node_modules/ol/style/Style.js","webpack://gis/./node_modules/ol/tilegrid/common.js","webpack://gis/./node_modules/ol/geom/LineString.js","webpack://gis/./node_modules/ol/source/Source.js","webpack://gis/./node_modules/ol/geom/flat/intersectsextent.js","webpack://gis/./node_modules/ol/pointer/EventSource.js","webpack://gis/./node_modules/ol/tilegrid/TileGrid.js","webpack://gis/./node_modules/ol/style/Fill.js","webpack://gis/./node_modules/ol/pointer/MouseSource.js","webpack://gis/./node_modules/ol/source/common.js","webpack://gis/./node_modules/ol/geom/flat/reverse.js","webpack://gis/./node_modules/ol/geom/flat/orient.js","webpack://gis/./node_modules/ol/string.js","webpack://gis/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://gis/./node_modules/ol/net.js","webpack://gis/./node_modules/ol/style/Stroke.js","webpack://gis/./node_modules/ol/extent/Corner.js","webpack://gis/./node_modules/ol/TileRange.js","webpack://gis/./node_modules/ol/layer/Vector.js","webpack://gis/./node_modules/ol/style/Circle.js","webpack://gis/./node_modules/ol/style/Image.js","webpack://gis/./node_modules/ol/source/TileEventType.js","webpack://gis/./node_modules/ol/source/UrlTile.js","webpack://gis/./node_modules/ol/Disposable.js","webpack://gis/./node_modules/ol/geom/flat/area.js","webpack://gis/./node_modules/ol/ImageCanvas.js","webpack://gis/./node_modules/ol/ImageBase.js","webpack://gis/./node_modules/rbush/index.js","webpack://gis/./node_modules/ol/MapEvent.js","webpack://gis/./node_modules/ol/geom/flat/interpolate.js","webpack://gis/./src/core/constant.js","webpack://gis/./src/layer/baseLayer.js","webpack://gis/./node_modules/ol/control/Zoom.js","webpack://gis/./node_modules/ol/geom/Circle.js","webpack://gis/./node_modules/ol/webgl.js","webpack://gis/./node_modules/ol/interaction/Property.js","webpack://gis/./node_modules/ol/sphere.js","webpack://gis/./node_modules/ol/style/IconImageCache.js","webpack://gis/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://gis/./node_modules/ol/structs/PriorityQueue.js","webpack://gis/./node_modules/ol/pointer/MsSource.js","webpack://gis/./node_modules/ol/pointer/NativeSource.js","webpack://gis/./node_modules/ol/pointer/PointerEvent.js","webpack://gis/./node_modules/ol/pointer/TouchSource.js","webpack://gis/./node_modules/ol/pointer/PointerEventHandler.js","webpack://gis/./node_modules/ol/renderer/Map.js","webpack://gis/./node_modules/ol/renderer/canvas/Map.js","webpack://gis/./node_modules/core-js/library/modules/_global.js","webpack://gis/./node_modules/core-js/library/modules/_descriptors.js","webpack://gis/./node_modules/ol/style/Atlas.js","webpack://gis/./node_modules/ol/style/AtlasManager.js","webpack://gis/./node_modules/ol/style/Text.js","webpack://gis/./node_modules/ol/style.js","webpack://gis/./node_modules/ol/control/util.js","webpack://gis/./node_modules/ol/control/Rotate.js","webpack://gis/./node_modules/ol/control/Attribution.js","webpack://gis/./node_modules/ol/style/RegularShape.js","webpack://gis/./node_modules/ol/style/IconImage.js","webpack://gis/./node_modules/ol/style/IconAnchorUnits.js","webpack://gis/./node_modules/ol/style/IconOrigin.js","webpack://gis/./node_modules/ol/style/Icon.js","webpack://gis/./node_modules/ol/AssertionError.js","webpack://gis/./node_modules/ol/Observable.js","webpack://gis/./node_modules/ol/layer/Base.js","webpack://gis/./node_modules/ol/geom/flat/interiorpoint.js","webpack://gis/./node_modules/ol/geom/flat/segments.js","webpack://gis/./node_modules/ol/render/canvas/Immediate.js","webpack://gis/./node_modules/ol/structs/LRUCache.js","webpack://gis/./node_modules/ol/render/VectorContext.js","webpack://gis/./node_modules/ol/render/Event.js","webpack://gis/./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack://gis/./node_modules/ol/layer/VectorRenderType.js","webpack://gis/./node_modules/ol/geom/flat/length.js","webpack://gis/./node_modules/ol/style/TextPlacement.js","webpack://gis/./node_modules/ol/MapBrowserEvent.js","webpack://gis/./node_modules/ol/TileQueue.js","webpack://gis/./node_modules/ol/ImageTile.js","webpack://gis/./node_modules/ol/TileCache.js","webpack://gis/./node_modules/ol/reproj/Triangulation.js","webpack://gis/./node_modules/ol/format/FormatType.js","webpack://gis/./node_modules/ol/featureloader.js","webpack://gis/./node_modules/ol/renderer/Layer.js","webpack://gis/./node_modules/ol/renderer/canvas/Layer.js","webpack://gis/./node_modules/ol/source/TileWMS.js","webpack://gis/./node_modules/ol/source/BingMaps.js","webpack://gis/./node_modules/ol/control/MousePosition.js","webpack://gis/./node_modules/ol/control/ScaleLine.js","webpack://gis/./node_modules/core-js/library/modules/_core.js","webpack://gis/./node_modules/core-js/library/modules/_an-object.js","webpack://gis/./node_modules/core-js/library/modules/_is-object.js","webpack://gis/./node_modules/ol/geom/MultiLineString.js","webpack://gis/./node_modules/ol/geom/MultiPoint.js","webpack://gis/./node_modules/ol/geom/MultiPolygon.js","webpack://gis/./node_modules/ol/geom/flat/center.js","webpack://gis/./node_modules/ol/interaction/Draw.js","webpack://gis/./node_modules/ol/Overlay.js","webpack://gis/./node_modules/ol/MapBrowserEventHandler.js","webpack://gis/./node_modules/ol/layer/Group.js","webpack://gis/./node_modules/ol/PluggableMap.js","webpack://gis/./node_modules/ol/Kinetic.js","webpack://gis/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://gis/./node_modules/ol/interaction/DragPan.js","webpack://gis/./node_modules/ol/interaction/DragRotate.js","webpack://gis/./node_modules/ol/render/Box.js","webpack://gis/./node_modules/ol/interaction/DragBox.js","webpack://gis/./node_modules/ol/interaction/DragZoom.js","webpack://gis/./node_modules/ol/events/KeyCode.js","webpack://gis/./node_modules/ol/interaction/KeyboardPan.js","webpack://gis/./node_modules/ol/interaction/KeyboardZoom.js","webpack://gis/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://gis/./node_modules/ol/interaction/PinchRotate.js","webpack://gis/./node_modules/ol/interaction/PinchZoom.js","webpack://gis/./node_modules/ol/render/ReplayGroup.js","webpack://gis/./node_modules/ol/render/ReplayType.js","webpack://gis/./node_modules/ol/geom/flat/textpath.js","webpack://gis/./node_modules/ol/render/canvas/Instruction.js","webpack://gis/./node_modules/ol/render/replay.js","webpack://gis/./node_modules/ol/render/canvas/Replay.js","webpack://gis/./node_modules/ol/render/canvas/ImageReplay.js","webpack://gis/./node_modules/ol/render/canvas/LineStringReplay.js","webpack://gis/./node_modules/ol/render/canvas/PolygonReplay.js","webpack://gis/./node_modules/ol/geom/flat/straightchunk.js","webpack://gis/./node_modules/ol/render/canvas/TextReplay.js","webpack://gis/./node_modules/ol/render/canvas/ReplayGroup.js","webpack://gis/./node_modules/ol/renderer/vector.js","webpack://gis/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://gis/./node_modules/ol/layer/VectorTileRenderType.js","webpack://gis/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://gis/./node_modules/ol/Map.js","webpack://gis/./node_modules/ol/interaction.js","webpack://gis/./node_modules/ol/centerconstraint.js","webpack://gis/./node_modules/ol/View.js","webpack://gis/./node_modules/ol/resolutionconstraint.js","webpack://gis/./node_modules/ol/layer/TileProperty.js","webpack://gis/./node_modules/ol/layer/Tile.js","webpack://gis/./src/map/tileLayer.js","webpack://gis/./src/layer/view.js","webpack://gis/./src/core/hashMap.js","webpack://gis/./node_modules/core-js/library/modules/_object-dp.js","webpack://gis/./node_modules/core-js/library/modules/_fails.js","webpack://gis/./node_modules/core-js/library/modules/_dom-create.js","webpack://gis/./node_modules/core-js/library/modules/_has.js","webpack://gis/./node_modules/core-js/library/modules/_to-iobject.js","webpack://gis/./node_modules/core-js/library/modules/_to-integer.js","webpack://gis/./node_modules/core-js/library/modules/_shared-key.js","webpack://gis/./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack://gis/./src/layer/geometry.js","webpack://gis/./node_modules/pixelworks/lib/index.js","webpack://gis/./src/main.js","webpack://gis/./src/map/index.js","webpack://gis/./src/map/baseMap.js","webpack://gis/./node_modules/quickselect/quickselect.js","webpack://gis/./node_modules/pixelworks/lib/processor.js","webpack://gis/./node_modules/pixelworks/lib/util.js","webpack://gis/./src/core/extendControl.js","webpack://gis/./node_modules/babel-runtime/core-js/object/create.js","webpack://gis/./node_modules/core-js/library/fn/object/create.js","webpack://gis/./node_modules/core-js/library/modules/es6.object.create.js","webpack://gis/./node_modules/core-js/library/modules/_export.js","webpack://gis/./node_modules/core-js/library/modules/_ctx.js","webpack://gis/./node_modules/core-js/library/modules/_a-function.js","webpack://gis/./node_modules/core-js/library/modules/_hide.js","webpack://gis/./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack://gis/./node_modules/core-js/library/modules/_to-primitive.js","webpack://gis/./node_modules/core-js/library/modules/_property-desc.js","webpack://gis/./node_modules/core-js/library/modules/_object-create.js","webpack://gis/./node_modules/core-js/library/modules/_object-dps.js","webpack://gis/./node_modules/core-js/library/modules/_object-keys.js","webpack://gis/./node_modules/core-js/library/modules/_object-keys-internal.js","webpack://gis/./node_modules/core-js/library/modules/_iobject.js","webpack://gis/./node_modules/core-js/library/modules/_cof.js","webpack://gis/./node_modules/core-js/library/modules/_defined.js","webpack://gis/./node_modules/core-js/library/modules/_array-includes.js","webpack://gis/./node_modules/core-js/library/modules/_to-length.js","webpack://gis/./node_modules/core-js/library/modules/_to-absolute-index.js","webpack://gis/./node_modules/core-js/library/modules/_shared.js","webpack://gis/./node_modules/core-js/library/modules/_library.js","webpack://gis/./node_modules/core-js/library/modules/_uid.js","webpack://gis/./node_modules/core-js/library/modules/_html.js","webpack://gis/./src/core/index.js","webpack://gis/./src/core/ol.js","webpack://gis/./src/core/popup.js","webpack://gis/./src/layer/index.js","webpack://gis/./src/layer/heatMap.js","webpack://gis/./node_modules/ol/layer/Heatmap.js","webpack://gis/./src/layer/pointLayer.js","webpack://gis/./src/layer/circleLayer.js","webpack://gis/./src/layer/icon.js","webpack://gis/./src/layer/progressLayer.js","webpack://gis/./node_modules/ol/source/CartoDB.js","webpack://gis/./node_modules/ol/source/Cluster.js","webpack://gis/./node_modules/ol/reproj/Image.js","webpack://gis/./node_modules/ol/source/Image.js","webpack://gis/./node_modules/ol/Image.js","webpack://gis/./node_modules/ol/source/ImageArcGISRest.js","webpack://gis/./node_modules/ol/source/ImageCanvas.js","webpack://gis/./node_modules/ol/source/ImageMapGuide.js","webpack://gis/./node_modules/ol/source/ImageStatic.js","webpack://gis/./node_modules/ol/source/ImageWMS.js","webpack://gis/./node_modules/ol/source/OSM.js","webpack://gis/./node_modules/ol/layer/Image.js","webpack://gis/./node_modules/ol/source/Raster.js","webpack://gis/./node_modules/ol/source/Stamen.js","webpack://gis/./node_modules/ol/source/TileArcGISRest.js","webpack://gis/./node_modules/ol/source/TileDebug.js","webpack://gis/./node_modules/ol/source/TileJSON.js","webpack://gis/./node_modules/ol/source/UTFGrid.js","webpack://gis/./node_modules/ol/VectorImageTile.js","webpack://gis/./node_modules/ol/VectorTile.js","webpack://gis/./node_modules/ol/source/VectorTile.js","webpack://gis/./node_modules/ol/source/WMTSRequestEncoding.js","webpack://gis/./node_modules/ol/tilegrid/WMTS.js","webpack://gis/./node_modules/ol/source/WMTS.js","webpack://gis/./node_modules/ol/source/Zoomify.js","webpack://gis/./node_modules/ol/source.js","webpack://gis/./node_modules/ol/control/FullScreen.js","webpack://gis/./node_modules/ol/control/OverviewMap.js","webpack://gis/./node_modules/ol/control/ZoomSlider.js","webpack://gis/./node_modules/ol/control/ZoomToExtent.js","webpack://gis/./node_modules/ol/control.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","equals","extend","extendCoordinate","extendFlatCoordinates","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getForViewAndSize","getHeight","getIntersection","getTopLeft","getTopRight","getWidth","intersects","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","coordinates","extent","ii","length","opt_extent","slice","x","y","dx","dy","coordinate","extent1","extent2","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","extendCoordinates","flatCoordinates","offset","end","stride","extendXY","Math","min","max","callback","opt_this","val","area","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","xs","ys","apply","_boundingExtentXYs","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","_obj_js__WEBPACK_IMPORTED_MODULE_0__","findListener","listeners","listener","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","target","type","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","keys","removeListenerMap","opt_once","callOnce","addEventListener","evt","bindListener","push","indexOf","splice","abstract","Error","getUid","VERSION","uidCounter_","obj","ol_uid","String","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","IDLE","LOADING","LOADED","EMPTY","ABORT","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkFont","measureTextHeight","measureTextWidth","rotateAtOffset","resetTransform","drawImage","_css_js__WEBPACK_IMPORTED_MODULE_0__","_dom_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_2__","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_3__","_transform_js__WEBPACK_IMPORTED_MODULE_4__","checkedFonts","measureContext","textHeights","interval","referenceWidth","retries","checked","referenceFonts","len","text","isAvailable","font","context","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","width","check","done","clear","clearInterval","fontSpec","fontFamilies","fontFamily","setInterval","span","heights","height","document","createElement","textContent","style","margin","padding","position","left","body","appendChild","offsetHeight","removeChild","offsetX","offsetY","translate","rotate","transform","opacity","image","originX","originY","w","h","scale","alpha","globalAlpha","setTransform","Projection_Projection","options","this","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","Units","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","PI","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","METERS","point","math","__proto__","constructor","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","Array","halfSize","log","tan","epsg3857_toEPSG4326","atan","exp","epsg4326_EXTENT","METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","DEGREES","epsg4326_PROJECTIONS","cache","transforms","transforms_add","source","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","add","addProjections","projections","forEach","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","sphere","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","j","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","opt_projection","proj_transform","toLonLat","lonLat","lon","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","transformExtent","ol_extent","transformWithProjections","addCommon","clamp","cosh","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","mat","maxRow","maxEl","abs","absValue","tmp","coef","k","angleInRadians","angleInDegrees","a","b","assign","getValues","var_sources","arguments$1","arguments","TypeError","values","assert","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assertion","errorCode","createCanvasContext2D","opt_width","opt_height","canvas","getContext","outerWidth","element","offsetWidth","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","reset","setFromArray","compose","invert","tmp_","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","e","f","dx1","dy1","sx","sy","angle","dx2","dy2","det","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","linearFindNearest","direction","reverseSubArray","begin","data","extension","isArray","remove","find","arr1","arr2","len1","stableSort","compareFnc","index","sort","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","getChangeEventType","_util_js__WEBPACK_IMPORTED_MODULE_0__","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","_obj_js__WEBPACK_IMPORTED_MODULE_4__","ObjectEvent","Event","oldValue","BaseObject","Observable","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","dispatchEvent","PROPERTYCHANGE","opt_silent","unset","changeEventTypeCache","ANIMATING","INTERACTING","TRUE","FALSE","VOID","_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","family","split","UNDEFINED","READY","z","opt_tileCoord","getKeyZXY","getKey","tileCoord","fromKey","map","Number","hash","quadKey","charCode","digits","mask","fromCharCode","join","withinExtentAndZ","getMinZoom","getMaxZoom","tileRange","getTileRangeForExtentAndZ","getFullTileRange","altShiftKeysOnly","focus","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","mouseOnly","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","_functions_js__WEBPACK_IMPORTED_MODULE_2__","_has_js__WEBPACK_IMPORTED_MODULE_3__","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","event","getTargetElement","activeElement","button","tagName","pointerEvent","pointerType","stopPropagation","propagationStopped","preventDefault","num","opt_size","hasArea","ratio","toSize","XY","XYZ","XYM","XYZM","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","CANVAS_LINE_DASH","TOUCH","POINTER","MSPOINTER","ua","navigator","userAgent","toLowerCase","devicePixelRatio","has","setLineDash","FEET","PIXELS","TILE_PIXELS","USFEET","pan","rotateWithoutConstraints","zoom","zoomByDelta","zoomWithoutConstraints","_Object_js__WEBPACK_IMPORTED_MODULE_0__","_easing_js__WEBPACK_IMPORTED_MODULE_1__","_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","Interaction","handleEvent","map_","setActive","getActive","ACTIVE","getMap","active","setMap","view","delta","opt_duration","currentCenter","constrainCenter","animate","duration","easing","setCenter","opt_anchor","constrainRotation","currentRotation","getRotation","anchor","opt_direction","constrainResolution","currentResolution","getResolution","resolutions","getResolutions","getMinResolution","getMaxResolution","calculateCenterZoom","setResolution","easeIn","pow","easeOut","inAndOut","linear","closestOnCircle","closestOnSegment","createStringXY","degreesToStringHDMS","format","distance","squaredDistanceToSegment","toStringHDMS","toStringXY","_math_js__WEBPACK_IMPORTED_MODULE_0__","_string_js__WEBPACK_IMPORTED_MODULE_1__","circle","getRadius","sqrt","segment","along","opt_fractionDigits","hemispheres","degrees","normalizedDegrees","dflPrecision","precision","deg","floor","sec","ceil","charAt","template","replace","toFixed","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","getForProjection","wrapX","createXYZ","createForProjection","extentFromProjection","_tilegrid_common_js__WEBPACK_IMPORTED_MODULE_0__","_size_js__WEBPACK_IMPORTED_MODULE_1__","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_3__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_proj_Units_js__WEBPACK_IMPORTED_MODULE_5__","_tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_6__","getTileCoordCenter","projectionExtent","worldWidth","worldsAway","getTileCoordForCoordAndZ","opt_options","xyzOptions","gridOptions","minZoom","tileSize","resolutionsFromExtent","maxZoom","opt_maxZoom","opt_tileSize","maxResolution","opt_corner","origin","createForExtent","half","CENTER","RESOLUTION","ROTATION","_functions_js__WEBPACK_IMPORTED_MODULE_0__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","_dom_js__WEBPACK_IMPORTED_MODULE_3__","_events_js__WEBPACK_IMPORTED_MODULE_4__","Control","target_","listenerKeys","render","setTarget","disposeInternal","getOverlayContainerStopEvent","POSTRENDER","getElementById","IMAGE","TILE","VECTOR_TILE","VECTOR","CollectionEvent","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","Property","opt_element","Collection","opt_array","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","array","getArray","item","insertAt","elem","ADD","removeAt","prev","REMOVE","setAt","opt_except","createFromTemplates","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","_math_js__WEBPACK_IMPORTED_MODULE_1__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_2__","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","pixelRatio","toString","range","templates","tileUrlFunctions","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","stop","tmpTransform","ol_transform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","util","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","getRevision","opt_sy","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","intersectsExtent","proj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","flat_transform","ol_Object","transformGeom2D","SimpleGeometry_SimpleGeometry","SimpleGeometry","layout","GeometryLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","changed","simpleGeometry","opt_dest","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","LAYERGROUP","SIZE","TARGET","VIEW","centroid","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__","_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","stopEvent","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","id","pointerId","pointerEvents","clientX","clientY","reproj_Tile","Tile","ReprojTile","sourceTileGrid","targetProj","targetTileGrid","wrappedTileCoord","gutter","getTileFunction","opt_errorThreshold","opt_renderEdges","TileState","renderEdges_","pixelRatio_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","targetExtent","getTileCoordExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","targetResolution","targetCenter","sourceResolution","reproj","isFinite","state","errorThresholdInPixels","common","triangulation_","Triangulation","getTriangles","getZForResolution","sourceExtent","calculateSourceExtent","sourceRange","srcX","srcY","tile","unlistenSources_","getImage","reproject_","sources","getState","getTileSize","load","leftToLoad","sourceListenKey","events","EventType","setTimeout","ol_Tile","TileImage_TileImage","UrlTile","TileImage","attributions","cacheSize","opaque","tileLoadFunction","defaultTileLoadFunction","tilePixelRatio","tileUrlFunction","transition","attributionsCollapsible","crossOrigin","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","canExpireCache","tileCache","expireCache","usedTiles","usedTileCache","getTileCacheForProjection","getGutterForProjection","getProjection","ol_proj","getGutter","getOpaque","getTileGridForProjection","thisProj","projKey","ol_tilegrid","TileCache","highWaterMark","createTile_","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","tileOptions","handleTileChange","getTile","tileCoordKey","tilecoord","containsKey","newTile","getTilePixelRatio","getTileInternal","interimTile","refreshInterimChain","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","source_UrlTile","imageTile","src","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","ends","jj","deflateMultiCoordinatesArray","coordinatesss","opt_endss","endss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","i$1","squaredDelta","maxDelta","isRing","opt_tmpPoint","tmpPoint","transform2D","dest","anchorX","anchorY","_extent_js__WEBPACK_IMPORTED_MODULE_0__","_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_4__","Point","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","_events_js__WEBPACK_IMPORTED_MODULE_1__","_Event_js__WEBPACK_IMPORTED_MODULE_3__","Target","Disposable","pendingRemovals_","dispatching_","listeners_","propagate","pendingRemovals","hasListener","opt_type","asString","asArray","HEX_COLOR_RE_","NAMED_COLOR_RE_","color","fromString","g","rgb","fromNamed","hasAlpha","substr","normalize","fromStringInternal_","asColorLike","_color_js__WEBPACK_IMPORTED_MODULE_0__","visibleAtResolution","_events_js__WEBPACK_IMPORTED_MODULE_0__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_util_js__WEBPACK_IMPORTED_MODULE_2__","_Object_js__WEBPACK_IMPORTED_MODULE_3__","_Base_js__WEBPACK_IMPORTED_MODULE_4__","_Property_js__WEBPACK_IMPORTED_MODULE_5__","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSource","getSourceState","handleSourceChange_","renderEvent","layerState","managed","getZIndex","zIndex","frameState","layerStatesArray","layerStates","visible","minResolution","appendParams","uri","params","keyParams","encodeURIComponent","qs","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","closest","flat_area","inflate","simplifiedFlatCoordinates","GeometryType","deflate","geom_SimpleGeometry","fromExtent","fromCircle","makeRegular","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","contains","getOrientedFlatCoordinates","opt_right","orient","getEnds","getFlatInteriorPoint","flatCenter","interiorpoint","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","simplifiedEnds","intersectsextent","opt_sides","opt_angle","sides","arrayLength","polygon","radius","startAngle","createStyleFunction","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","setId","styles","douglasPeucker","douglasPeuckerArray","snap","quantizeArray","quantizeMultiArray","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","round","quantize","simplifiedEndss","_TileState_js__WEBPACK_IMPORTED_MODULE_0__","_events_Target_js__WEBPACK_IMPORTED_MODULE_2__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_3__","EventTarget","transition_","transitionStarts_","getInterimTile","getTileCoord","setState","getAlpha","time","inTransition","endTransition","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","wn","_hashMap","mapCache","HashMap","layerCache","eventCache","popupCache","geometryCache","MOVESTART","MOVEEND","calculateSourceResolution","_dom_js__WEBPACK_IMPORTED_MODULE_0__","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_math_js__WEBPACK_IMPORTED_MODULE_2__","_proj_js__WEBPACK_IMPORTED_MODULE_3__","sourceCenter","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","enlargeClipPoint","centroidX","centroidY","dX","dY","triangulation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","save","beginPath","p0","p1","p2","moveTo","lineTo","clip","restore","strokeStyle","lineWidth","closePath","stroke","disable","none","createSnapToN","createSnapToZero","theta","opt_tolerance","MapBrowserPointerEvent","MapBrowserEvent","opt_dragging","opt_frameState","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","loadingstrategy_all","VectorEventType","RBush_RBush","opt_maxEntries","rbush_","rbush_default","items_","insert","extents","items","uid","update","bbox","getAll","all","getInExtent","search","forEach_","forEachInExtent","result","ol_obj","toJSON","concat","rbush","structs_RBush","VectorSourceEvent","opt_feature","feature","Vector_VectorSource","Source","VectorSource","State","loader_","functions","format_","overlaps_","overlaps","url_","loader","asserts","featureloader","strategy_","strategy","collection","features","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","ObjectEventType","valid","addFeatures","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","CollectionEventType","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","filter","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","this$1","loadedExtentsRtree","extentsToLoad","loading","loop","extentToLoad","removeLoadedExtent","removed","setLoader","source_Source","_TileImage_js__WEBPACK_IMPORTED_MODULE_0__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_1__","TileSourceEvent","_TileCache_js__WEBPACK_IMPORTED_MODULE_1__","_TileState_js__WEBPACK_IMPORTED_MODULE_2__","_size_js__WEBPACK_IMPORTED_MODULE_5__","_Source_js__WEBPACK_IMPORTED_MODULE_6__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_7__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_8__","TileSource","opaque_","tilePixelRatio_","tmpSize","key_","forEachLoadedTile","loaded","covered","setKey","getTileGrid","getTilePixelSize","getWrapX","refresh","useTile","toFunction","createDefaultStyle","createEditingStyle","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_Circle_js__WEBPACK_IMPORTED_MODULE_2__","_Fill_js__WEBPACK_IMPORTED_MODULE_3__","_Stroke_js__WEBPACK_IMPORTED_MODULE_4__","Style","geometry_","geometryFunction_","defaultGeometryFunction","fill_","fill","image_","renderer_","renderer","stroke_","text_","zIndex_","styleFunction","getFill","getStroke","getText","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","setZIndex","defaultStyles","white","blue","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","_array_js__WEBPACK_IMPORTED_MODULE_0__","_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_2__","_GeometryType_js__WEBPACK_IMPORTED_MODULE_3__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__","_flat_closest_js__WEBPACK_IMPORTED_MODULE_5__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_6__","_flat_inflate_js__WEBPACK_IMPORTED_MODULE_7__","_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_8__","_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_9__","_flat_length_js__WEBPACK_IMPORTED_MODULE_10__","_flat_segments_js__WEBPACK_IMPORTED_MODULE_11__","_flat_simplify_js__WEBPACK_IMPORTED_MODULE_12__","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","extrapolate","getCoordinateAt","fraction","getFlatMidpoint","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_State_js__WEBPACK_IMPORTED_MODULE_3__","projection_","attributions_","adaptAttributions","attributionsCollapsible_","state_","wrapX_","getAttributions","getAttributionsCollapsible","setAttributions","attributionLike","intersectsLineString","intersectsLineStringArray","intersectsLinearRingArray","intersectsLinearRingMultiArray","_contains_js__WEBPACK_IMPORTED_MODULE_1__","_segments_js__WEBPACK_IMPORTED_MODULE_2__","coordinatesExtent","point1","point2","intersectsLinearRing","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","_common_js__WEBPACK_IMPORTED_MODULE_0__","_TileRange_js__WEBPACK_IMPORTED_MODULE_2__","_array_js__WEBPACK_IMPORTED_MODULE_3__","_extent_js__WEBPACK_IMPORTED_MODULE_4__","_math_js__WEBPACK_IMPORTED_MODULE_5__","_size_js__WEBPACK_IMPORTED_MODULE_6__","tmpTileCoord","TileGrid","zoomFactor","resolutions_","origins","zoomFactor_","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","_color_js__WEBPACK_IMPORTED_MODULE_1__","Fill","color_","checksum_","getColor","setColor","getChecksum","POINTER_ID","POINTER_TYPE","prepareEvent","_EventSource_js__WEBPACK_IMPORTED_MODULE_0__","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","down","mousemove","move","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","lastTouches","lts","cloneEvent","pd","isPrimary","DEFAULT_WMS_VERSION","linearRingIsClockwise","edge","linearRingIsOriented","right","isClockwise","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","padNumber","number","opt_precision","numberString","decimal","compareVersions","s1","s2","n1","n2","_LayerType_js__WEBPACK_IMPORTED_MODULE_1__","_TileState_js__WEBPACK_IMPORTED_MODULE_3__","_ViewHint_js__WEBPACK_IMPORTED_MODULE_4__","_dom_js__WEBPACK_IMPORTED_MODULE_5__","_extent_js__WEBPACK_IMPORTED_MODULE_6__","_IntermediateCanvas_js__WEBPACK_IMPORTED_MODULE_7__","_transform_js__WEBPACK_IMPORTED_MODULE_8__","CanvasTileLayerRenderer","IntermediateCanvasRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","imageTransform_","zDirection","isDrawableTile_","getLayer","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","prepareFrame","viewState","viewResolution","viewCenter","tileSource","sourceRevision","tileResolution","oversampling","imageExtent","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","hints","viewHints","animatingOrInteracting","tmpTileRange","Date","now","childTileRange","renderedResolution","tilePixelSize","clearRect","currentScale","currentTilePixelSize","currentZ","tileExtent","tileGutter","tilesToDraw","zs","drawTileImage","coordinateToCanvasPixelTransform","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","getImageTransform","layer","mapRenderer","jsonp","opt_errback","opt_callbackParam","script","cleanup","async","timer","clearTimeout","getElementsByTagName","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","TileRange","containsTileRange","getSize","_LayerType_js__WEBPACK_IMPORTED_MODULE_0__","_Layer_js__WEBPACK_IMPORTED_MODULE_1__","_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_2__","_obj_js__WEBPACK_IMPORTED_MODULE_3__","_style_Style_js__WEBPACK_IMPORTED_MODULE_4__","VectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode","CircleStyle","RegularShape","points","atlasManager","atlasManager_","setOpacity","getOpacity","setScale","getScale","setRadius","radius_","render_","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","getRotateWithView","getSnapToPixel","getAnchor","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setRotation","setSnapToPixel","snapToPixel","listenImageChange","thisArg","unlistenImageChange","TileEventType","UrlTile_UrlTile","generateTileUrlFunction_","tileurlfunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","pruneExceptNewestZ","disposed_","dispose","twiceArea","linearRingss","_ImageBase_js__WEBPACK_IMPORTED_MODULE_0__","_ImageState_js__WEBPACK_IMPORTED_MODULE_1__","ImageCanvas","ImageBase","opt_loader","error_","getError","handleLoad_","err","_events_Target_js__WEBPACK_IMPORTED_MODULE_1__","getPixelRatio","default","quickselect","maxEntries","_maxEntries","_minEntries","_initFormat","findItem","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","multiSelect","_all","childBBox","nodesToSearch","collides","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","MapEvent","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","pointX","pointY","cumulativeLengths","lo","hi","m0","interpolate","mapType","wms","osm","xyz","bingMap","gaoDe","layerzIndex","singleclick","click","dblclick","popupId","container","content","closer","containerClass","contentClass","closerClass","geometryType","line","box","geometryLayerId","pointLayer","lineLayer","polygonLayer","circleLayer","_cache","_proj","_constant","registerCustomEvent","paramObj","layerKey","mapId","layerId","mapObj","eventKey","put","callbackfun","clickFun","callbackObj","evtCoordinate","layerInfo","forEachFeatureAtPixel","pixel","layerObj","getInteractions","console","un","on","removeCustomEvent","eventObjs","createLayer","_source","_layer","UniquelyKey","addLayer","removeLayer","layerkey","registerClick","unRegisterClick","registerDblclick","unRegisterDblclick","registerRightclick","viewPort","getViewport","rightClickFun","featureObj","coordinate3857","getEventCoordinate","getPixelFromCoordinate","unRegisterRightclick","registerMouseover","unRegisterMouseover","_Control_js__WEBPACK_IMPORTED_MODULE_2__","_css_js__WEBPACK_IMPORTED_MODULE_3__","_easing_js__WEBPACK_IMPORTED_MODULE_4__","Zoom","className","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","setAttribute","title","createTextNode","handleClick_","outElement","cssClasses","duration_","zoomByDelta_","getView","newResolution","getAnimating","cancelAnimations","Circle","opt_radius","setCenterAndRadius","getRadiusSquared_","circleExtent","MAX_TEXTURE_SIZE","CONTEXT_IDS","gl","opt_attributes","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","getDistance","DEFAULT_RADIUS","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","bearing","lon1","dByR","lat","asin","shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","setSize","maxCacheSize","_reproj_common_js__WEBPACK_IMPORTED_MODULE_0__","_ImageCanvas_js__WEBPACK_IMPORTED_MODULE_1__","_LayerType_js__WEBPACK_IMPORTED_MODULE_2__","_ViewHint_js__WEBPACK_IMPORTED_MODULE_3__","_array_js__WEBPACK_IMPORTED_MODULE_4__","_extent_js__WEBPACK_IMPORTED_MODULE_5__","_layer_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_6__","_obj_js__WEBPACK_IMPORTED_MODULE_7__","_Map_js__WEBPACK_IMPORTED_MODULE_8__","_IntermediateCanvas_js__WEBPACK_IMPORTED_MODULE_9__","_transform_js__WEBPACK_IMPORTED_MODULE_10__","CanvasImageLayerRenderer","imageLayer","skippedFeatures_","vectorRenderer_","ctor","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","skippedFeatureUids","replayGroupChanged","loadImage","imageResolution","imagePixelRatio","forEachFeatureAtCoordinate","hitTolerance","_obj_js__WEBPACK_IMPORTED_MODULE_1__","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointer_EventSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","browserEvent","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","PointerEventHandler_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","contained","inType","wrapMouseEvent","expireIconCache","sortByZIndex","state1","state2","Map","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","dispatchRenderEvent","registerLayerRenderers","constructors","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","removeLayerRenderers","removeLayerRendererByKey_","layerFilter","thisArg2","translatedCoordinate","layerRenderer","getLayerRenderer","forEachLayerAtPixel","hasFeatureAtCoordinate","candidate","events_EventType","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","renderFrame","scheduleExpireIconCache","postRenderFunctions","scheduleRemoveUnusedLayerRenderers","ol_Disposable","layerRendererConstructors","Map_CanvasMapRenderer","CanvasMapRenderer","context_","dom","display","css","insertBefore","childNodes","renderedVisible_","transform_","vectorContext","Immediate","composeEvent","sourceState","composeFrame","numLayers","forEachLayerAtCoordinate","self","__g","Atlas_Atlas","space","space_","emptyBlocks_","entries_","renderCallback","block","entry","split_","newBlock1","newBlock2","updateBlocks_","args","style_Atlas","AtlasManager_AtlasManager","currentSize_","initialSize","maxSize_","maxSize","webgl","atlases_","currentHitSize_","hitAtlases_","getInfo","info","getInfo_","hitInfo","mergeInfos_","atlases","hitImage","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","atlas","style_AtlasManager","Text_Text","font_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","TextPlacement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","style_Text","Icon","IconImage","Image","defaults","_Collection_js__WEBPACK_IMPORTED_MODULE_0__","_Attribution_js__WEBPACK_IMPORTED_MODULE_1__","_Rotate_js__WEBPACK_IMPORTED_MODULE_2__","_Zoom_js__WEBPACK_IMPORTED_MODULE_3__","controls","zoomOptions","rotateOptions","attribution","attributionOptions","_Control_js__WEBPACK_IMPORTED_MODULE_0__","_css_js__WEBPACK_IMPORTED_MODULE_1__","_easing_js__WEBPACK_IMPORTED_MODULE_2__","_events_js__WEBPACK_IMPORTED_MODULE_3__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_4__","Rotate","label","label_","classList","tipLabel","callResetNorth_","resetNorth","autoHide_","autoHide","resetNorth_","mapEvent","msTransform","webkitTransform","_Control_js__WEBPACK_IMPORTED_MODULE_1__","_css_js__WEBPACK_IMPORTED_MODULE_2__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_5__","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_6__","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","collapseLabel","collapseLabel_","activeLabel","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","innerHTML","handleToggle_","toggle","getCollapsible","setCollapsed","getCollapsed","_colorlike_js__WEBPACK_IMPORTED_MODULE_1__","_dom_js__WEBPACK_IMPORTED_MODULE_2__","_ImageState_js__WEBPACK_IMPORTED_MODULE_4__","_render_canvas_js__WEBPACK_IMPORTED_MODULE_5__","checksums_","hitDetectionCanvas_","points_","radius1","radius2_","radius2","angle_","anchor_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","getAngle","imageSize","strokeWidth","renderOptions","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","angle0","radiusC","arc","fillStyle","strokeChecksum","fillChecksum","checksum","_IconImageCache_js__WEBPACK_IMPORTED_MODULE_5__","imageState","hitDetectionImage_","imageListenerKeys_","imageState_","src_","tainted_","isTainted_","getImageData","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconAnchorUnits","FRACTION","IconOrigin","Icon_Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","ImageState","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","AssertionError","message","revision_","once","getVisible","setMaxResolution","setMinResolution","setVisible","zindex","getInteriorPointOfArray","getInteriorPointsOfMultiArray","flatCenters","flatCentersOffset","intersections","rr","maxSegmentLength","segmentLength","isNaN","interiorPoints","ret","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_3__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_5__","_has_js__WEBPACK_IMPORTED_MODULE_6__","_VectorContext_js__WEBPACK_IMPORTED_MODULE_7__","_canvas_js__WEBPACK_IMPORTED_MODULE_8__","_transform_js__WEBPACK_IMPORTED_MODULE_9__","CanvasImmediateRenderer","VectorContext","viewRotation","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","centerX","centerY","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","drawCircle","setFillStrokeStyle","setImageStyle","setTextStyle","drawGeometry","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawFeature","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageStyle","imageAnchor","imageImage","imageOrigin","textStyle","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","LRUCache","opt_highWaterMark","count_","oldest_","newest_","value_","newer","older","peekLast","peekLastKey","peekFirstKey","prune","drawCustom","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","drawText","opt_declutterGroup","RenderEvent","opt_vectorContext","opt_context","opt_glContext","glContext","_coordinate_js__WEBPACK_IMPORTED_MODULE_1__","_extent_js__WEBPACK_IMPORTED_MODULE_3__","_Layer_js__WEBPACK_IMPORTED_MODULE_4__","_transform_js__WEBPACK_IMPORTED_MODULE_5__","CanvasLayerRenderer","hitCanvasContext_","preCompose","clipped","imageTransform","dw","dh","postCompose","imageData","lineStringLength","LINE","getEventPixel","getCoordinateFromPixel","dragging","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","_Tile_js__WEBPACK_IMPORTED_MODULE_0__","_TileState_js__WEBPACK_IMPORTED_MODULE_1__","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_0__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_1__","zKey","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","FormatType","ARRAY_BUFFER","JSON","TEXT","XML","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","featureloader_xhr","dataProjection","LayerRenderer","layer_","tiles","handleImageChange_","renderIfReadyAndVisible","postRenderFunction","tileSourceKey","preload","opt_tileCallback","wantedTiles","tileQueue","ol_Observable","Layer_CanvasLayerRenderer","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","_proj_js__WEBPACK_IMPORTED_MODULE_5__","_reproj_js__WEBPACK_IMPORTED_MODULE_6__","_size_js__WEBPACK_IMPORTED_MODULE_7__","_TileImage_js__WEBPACK_IMPORTED_MODULE_8__","_WMSServerType_js__WEBPACK_IMPORTED_MODULE_9__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_10__","_string_js__WEBPACK_IMPORTED_MODULE_11__","_uri_js__WEBPACK_IMPORTED_MODULE_12__","TileWMS","transparent","params_","v13_","serverType_","hidpi_","hidpi","tmpExtent_","updateV13_","getKeyForParams_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getParams","dpi","updateParams","version","_tileurlfunction_js__WEBPACK_IMPORTED_MODULE_0__","_net_js__WEBPACK_IMPORTED_MODULE_2__","_State_js__WEBPACK_IMPORTED_MODULE_4__","_TileImage_js__WEBPACK_IMPORTED_MODULE_5__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_6__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_7__","BingMaps","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","epsg4326Extent","_Control_js__WEBPACK_IMPORTED_MODULE_3__","PROJECTION","MousePosition","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","mapProjection_","lastMouseMovePixel_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","viewport","html","_proj_Units_js__WEBPACK_IMPORTED_MODULE_6__","UNITS_PROP","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","pointResolutionUnits","nominalCount","suffix","metersPerDegree","core","__e","isObject","it","geom_MultiLineString","MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","flat_interpolate","getLineString","getLineStrings","midpoints","midpoint","geom_MultiPoint","MultiPoint","appendPoint","getPoint","geom_MultiPolygon","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","createRegularPolygon","createBox","Mode","DrawEventType","DrawEvent","Draw_Draw","Draw","pointerOptions","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","mode_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","ol_coordinate","Constructor","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","geometryName","condition_","condition","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","MapBrowserEventType","pass","addToDrawing_","handlePointerMove_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","Pointer","boxCoordinates","_MapEventType_js__WEBPACK_IMPORTED_MODULE_0__","_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__","_dom_js__WEBPACK_IMPORTED_MODULE_4__","_events_js__WEBPACK_IMPORTED_MODULE_5__","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","getOverlayContainer","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","getBoundingClientRect","pageXOffset","top","pageYOffset","isRendered","mapSize","updateRenderedPosition","bottom","getOptions","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","isMoving_","LAYERS","Group","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","Base","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","interactions","overlays","layerGroup","MapProperty","View","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getLayerGroup","addOverlay","overlay","getOverlays","cancelAnimationFrame","getFeaturesAtPixel","hasFeatureAtPixel","viewportPosition","eventPosition","getTarget","getOverlayById","tileCenter","interactionsArray","handlePostRender","ViewHint","render_EventType","getLoading","targetElement","updateSize","handleViewPropertyChanged_","renderSync","requestAnimationFrame","removeControl","removeInteraction","removeOverlay","previousFrameState","ol_size","isDef","getHints","MapEventType","setLayerGroup","setView","skipFeature","computedStyle","parseFloat","unskipFeature","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","ol_Kinetic","DoubleClickZoom_handleEvent","delta_","interaction_Interaction","interaction_DoubleClickZoom","DoubleClickZoom","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","events_condition","noKinetic_","setHint","centerpx","interaction_DragRotate","DragRotate","lastAngle_","getConstraints","rotationconstraint","Box","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","onBoxEnd","out_","mapExtent","calculateExtent","boxPixelExtent","factor","getResolutionForExtent","interaction_DragZoom","DragBox","DragZoom","box_","minArea_","onBoxEnd_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","interaction_KeyboardZoom","KeyboardZoom","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","drawTextOnPath","measure","startM","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","Replay","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","render_canvas","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","repeatSize","instruction","renderDeclutter_","groupCount","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","coords","baseline","fillKey","strokeKey","textKey","pathLength","flat_length","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","colorlike","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","render_VectorContext","ImageReplay","CanvasImageReplay","declutterGroup_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","BATCH_CONSTRUCTORS","Default","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","flatEnd","flatOffset","oo","drawChars_","drawTextImage_","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","GeometryCollection","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","dirty","LayerType","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","pixelScale","TileLayer","VectorTileLayer","Map_Map","control_util","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","canvas_Map","ImageLayer","createCenterConstraint","createResolutionConstraint","createRotationConstraint","isNoopAnimation","DEFAULT_MIN_ZOOM","View_View","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","ViewProperty","resolutionConstraintInfo","maxResolution_","minResolution_","minZoom_","centerConstraint","resolutionConstraint","constraint","rotationConstraint","constraints_","options_","getUpdatedOptions_","newOptions","getZoom","var_args","animationCount","setZoom","animationCallback","series","animation","complete","sourceRotation","targetRotation","getInteracting","more","seriesComplete","elapsed","progress","calculateCenterRotate","Boolean","getSizeFromViewport_","selector","querySelector","metrics","opt_delta","opt_hints","getZoomForResolution","setMaxZoom","setMinZoom","xResolution","yResolution","getResolutionForValueFunction","opt_power","power","getValueForResolutionFunction","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","centerOn","hint","returnValue","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","enableRotation","TileProperty","Tile_TileLayer","setPreload","setUseInterimTilesOnError","layer_Layer","wmsLayer","serverType","osmLayer","OSM","arcgisXYZ","curTileGrid","tileArcGISXYZ","bingMapSource","language","GaoDeMap","sourceXYZ","addBaseLayer","baseLayer","baseLayerType","_View","createView","containsValue","_values","keySet","_keys","anObject","IE8_DOM_DEFINE","toPrimitive","dP","O","P","Attributes","is","IObject","defined","draw","_Draw","geometrySource","geometryLayer","geometryKey","coordinates4326","coordinates3857","coor","undrawGeometry","getDraw","resetDraw","Processor","_index","_index2","_index3","Proj","Contant","Popup","HeatMap","Stand","BaseView","_coordinate","_geometry","addZoom","getElementsByClassName","zoomNum","createMap","baseView","RotateControl","getMapObj","removeMap","setMapCenter","swap","defaultCompare","quickselectStep","sd","newLeft","newRight","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Uint8ClampedArray","arrays","pixels","createWorker","config","onMessage","lib","blob","Blob","URL","createObjectURL","worker","Worker","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","destroy","_destroyed","job","shift","slices","_resolveJob","hasImageData","createImageData","handleRotate","_create2","handleDblRotate","$Object","D","$export","S","hide","own","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","IS_WRAP","W","expProto","C","virtual","R","U","aFunction","that","createDesc","valueOf","bitmap","configurable","writable","dPs","enumBugKeys","IE_PROTO","Empty","createDict","iframeDocument","iframe","contentWindow","write","Properties","defineProperties","$keys","toIObject","arrayIndexOf","names","cof","propertyIsEnumerable","toLength","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","toInteger","store","copyright","px","random","documentElement","_ol","_Overlay","removePopup","addPopup","isHasPopup","creatToolTip","tipsId","overlayKey","tooltip","tooltipArr","removeToolTip","addHeatMap","geom","layerSource","heatmap","_projection","_features","datas","Heatmap","gradient","blur","shadow","removeHeatmap","_Vector_js__WEBPACK_IMPORTED_MODULE_3__","_obj_js__WEBPACK_IMPORTED_MODULE_5__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_6__","_style_Icon_js__WEBPACK_IMPORTED_MODULE_7__","_style_Style_js__WEBPACK_IMPORTED_MODULE_8__","BLUR","GRADIENT","DEFAULT_GRADIENT","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","handleStyleChanged_","weightFunction","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","view8","_baseLayer","_style","addPointLayer","styleFun","fillColor","strokeColor","addCircleLayer","addIcon","featureData","imgPath","currentZoom","updateIcon","iconLayer","updatePoint","addProgressLayer","styleObj","progressLayer","styleFunDone","doneColor","rotatedAngle","undoneColor","source_CartoDB","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","stringify","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","parse","tilesUrl","cdn_url","https","layergroupid","source_XYZ","source_Cluster","Cluster","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ol_ImageBase","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","ol_array","getImageInternal","handleImageChange","ol_Image","ImageWrapper","imageLoadFunction","imageLoadFunction_","source_ImageArcGISRest","ImageArcGISRest","ratio_","halfWidth","halfHeight","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","source_ImageCanvas","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","source_ImageMapGuide","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","mcsW","mcsH","devW","devH","mpp","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic","Static","imageExtent_","getImageExtent","targetWidth","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","source_common","viewWidth","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","WMSServerType","string","ATTRIBUTION","source_OSM","Image_ImageLayer","layer_Image","RasterEventType","RasterOperationType","PIXEL","RasterSourceEvent","sharedContext","layerOrSource","layer_Tile","createTileRenderer","canvas_ImageLayer","createImageRenderer","Raster","RasterSource","worker_","operationType_","operationType","threads_","renderers_","renderers","createRenderers","requestedFrameState_","renderedImageCanvas_","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","TileArcGISRest_tileUrlFunction","source_TileArcGISRest","TileArcGISRest","source_TileImage","TileDebug_LabeledTile","LabeledTile","strokeRect","source_TileDebug","TileDebug","textTileCoord","source_Tile","source_TileJSON","TileJSON","tileJSON_","net","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","attributionExtent","UTFGrid_CustomTile","CustomTile","preemptive","preemptive_","grid_","keys_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","source_UTFGrid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","ol_VectorImageTile","VectorImageTile","sourceTiles","replayState_","sourceRevision_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","useLoadedOnly","loadCount","sourceTileKey","consumers","finishLoading_","errorSourceTiles","empty","defaultLoadFunction","onLoad","onError","DEFAULT_EXTENT","ol_VectorTile","VectorTile","replayGroups_","setFeatures","source_VectorTile","tileGrids_","WMTSRequestEncoding","KVP","REST","source_WMTS","WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","matrixSet","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","localContext","TileMatrix","getMatrixId","TileCol","TileRow","TierSizeCalculation","TRUNCATED","Zoomify_CustomTile","zoomifyImage_","ol_ImageTile","source_Zoomify","Zoomify","tierSizeCalculation","tierSizeInTiles","tilegrid_common","tileSizeForTierSizeCalculation","tileCountUpToTier","tileCoordZ","tileIndex","tileWidth","TileGroup","ZoomifyTileClass","changeType","getChangeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","isFullScreenSupported","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","isFullScreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","mozRequestFullScreenWithKeys","requestFullScreenWithKeys","handleFullScreenChange_","fullscreen","activeClassName","inactiveClassName","nextClassName","control_Control","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","OverlayPositioning","scope","overlayBox","mousePosition","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","LN2","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","thumbElement","containerElement","dragger_","pointer_EventType","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","firstElementChild","drag","getPositionForResolution_","amount","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent"],"mappings":"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","file":"gis.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gis\"] = factory();\n\telse\n\t\troot[\"gis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/gis/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 167);\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.3';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","import { HashMap } from './hashMap';\r\n\r\nlet mapCache = new HashMap();\r\nlet layerCache = new HashMap();\r\nlet eventCache = new HashMap();\r\nlet popupCache = new HashMap();\r\nlet geometryCache = new HashMap();\r\n\r\nexport {\r\n    mapCache,\r\n    layerCache,\r\n    eventCache,\r\n    popupCache,\r\n    geometryCache\r\n}","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if ((this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) ||\n              this.renderedRevision != sourceRevision) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n//# sourceMappingURL=net.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","//定义基础地图类型\r\nconst mapType = {\r\n    wms: \"WMS\",\r\n    osm: \"OSM\",\r\n    xyz: \"XYZ\",\r\n    bingMap: \"BingMap\",\r\n    gaoDe: \"GaoDe\"\r\n        //天地图\r\n        //xyz地图\r\n        //高德地图\r\n        //百度地图\r\n}\r\n\r\nconst layerzIndex = {\r\n    geometry: 1000\r\n}\r\n\r\nconst eventType = {\r\n    singleclick: 'singleclick',\r\n    click: 'click',\r\n    dblclick: 'dblclick',\r\n    mouseover: 'pointermove',\r\n    mouseout: 'mouseout',\r\n    // moveend: 'moveend',\r\n    // movestart:'movestart',\r\n    // mousedown: 'mousedown',\r\n    // mousemove: 'mousemove',\r\n    // mouseup: 'mouseup',\r\n    right: 'contextmenu'\r\n}\r\n\r\nconst popupId = {\r\n    container: 'popup',\r\n    content: 'popup-content',\r\n    closer: 'popup-closer',\r\n    containerClass: 'ol-popup',\r\n    contentClass: 'ol-content',\r\n    closerClass: 'ol-popup-closer'\r\n}\r\n\r\nconst geometryType = {\r\n    point: 'Point',\r\n    line: 'LineString',\r\n    polygon: 'Polygon',\r\n    circle: 'Circle',\r\n    box: 'Box'\r\n}\r\n\r\nconst geometryLayerId = {\r\n    pointLayer: 'pointGeometry',\r\n    lineLayer: 'lineGeometry',\r\n    polygonLayer: 'polygonGeometry',\r\n    circleLayer: 'circleGeometry'\r\n}\r\n\r\nexport {\r\n    mapType,\r\n    layerzIndex,\r\n    eventType,\r\n    popupId,\r\n    geometryType,\r\n    geometryLayerId\r\n}","import VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport { mapCache, layerCache, eventCache } from './../core/cache';\r\nimport { toLonLat } from 'ol/proj';\r\nimport { eventType } from './../core/constant';\r\n\r\nlet createLayer = function(paramObj) {\r\n  if (!paramObj.mapId || !mapCache.containsKey(paramObj.mapId)) {\r\n      return;\r\n  }\r\n\r\n  var UniquelyKey = paramObj.mapId + '_' + paramObj.layerId;\r\n  var mapObj = mapCache.get(paramObj.mapId);\r\n  var _source, _layer;\r\n\r\n  if (layerCache.containsKey(UniquelyKey)) {\r\n      _layer = layerCache.get(UniquelyKey);\r\n      _layer.getSource().clear();\r\n  } else {\r\n      _source = new VectorSource();\r\n      _layer = new VectorLayer({\r\n          source: _source,\r\n          zIndex: paramObj.zIndex || 1000\r\n      });\r\n      _layer.set('layerId', paramObj.layerId);\r\n\r\n      layerCache.put(paramObj.mapId + '_' + paramObj.layerId, _layer);\r\n\r\n      mapObj.addLayer(_layer);\r\n  }\r\n  return _layer;\r\n}\r\n\r\nfunction removeLayer(paramObj) {\r\n    var mapObj = mapCache.get(paramObj.mapId);\r\n\r\n    if (!mapObj) {\r\n      debugger\r\n      return\r\n    }\r\n    var layerkey = paramObj.mapId + '_' + paramObj.layerId;\r\n    var layerObj = layerCache.get(layerkey);\r\n\r\n    mapObj.removeLayer(layerObj);\r\n    layerObj = null;\r\n    layerCache.remove(layerkey);\r\n}\r\n\r\nfunction getLayer(paramObj) {\r\n    var layerkey = paramObj.mapId + '_' + paramObj.layerId;\r\n    var layerObj = layerCache.get(layerkey);\r\n\r\n    return layerObj;\r\n}\r\n\r\nfunction registerCustomEvent(paramObj) {\r\n    var layerKey = paramObj.mapId + '_' + paramObj.layerId;\r\n    if (!layerCache.containsKey(layerKey) || !mapCache.containsKey(paramObj.mapId)) {\r\n        return;\r\n    }\r\n\r\n    var mapObj = mapCache.get(paramObj.mapId);\r\n    var layerObj = layerCache.get(layerKey);\r\n    var type = paramObj.type;\r\n    var eventKey = paramObj.mapId + '_' + type;\r\n\r\n    if (!eventCache.containsKey(eventKey)) {\r\n        eventCache.put(eventKey, {});\r\n    }\r\n\r\n    if (paramObj.callbackfun && typeof(paramObj.callbackfun) == 'function') {\r\n        var clickFun = function(e) {\r\n            var callbackObj = {};\r\n            callbackObj.map = e.map;\r\n            callbackObj.evtCoordinate = toLonLat(e.coordinate);\r\n\r\n\r\n            var feaFun = function(feature, layer) {\r\n                var layerObj = {\r\n                    feature: undefined,\r\n                    layer: undefined\r\n                };\r\n                if (feature) {\r\n                    layerObj.feature = feature;\r\n                    layerObj.layer = layer;\r\n                }\r\n                return layerObj;\r\n            }\r\n\r\n            var layerInfo = callbackObj.map.forEachFeatureAtPixel(e.pixel, feaFun);\r\n            if (!layerInfo || !layerInfo.layer || !layerInfo.feature || !layerInfo.layer.get('layerId') || (layerInfo.layer.get('layerId') && layerInfo.layer.get('layerId') != paramObj.layerId)) {\r\n                return;\r\n            }\r\n            if (paramObj.type == eventType.dblclick) {\r\n                e.map.getInteractions().getArray()[1].setActive(false);\r\n            }\r\n            callbackObj.feature = layerInfo.feature;\r\n            callbackObj.layer = layerInfo.layer;\r\n            callbackObj.coordinate = toLonLat(callbackObj.feature.getGeometry().getCoordinates());\r\n            callbackObj.data = callbackObj.feature.get('data');\r\n\r\n            console.log(callbackObj);\r\n            paramObj.callbackfun(callbackObj);\r\n\r\n            if (paramObj.type == eventType.dblclick) {\r\n                setTimeout(() => {\r\n                    e.map.getInteractions().getArray()[1].setActive(true);\r\n                }, 500)\r\n\r\n            }\r\n        }\r\n\r\n        if (eventCache.get(eventKey).hasOwnProperty(layerKey)) {\r\n            mapObj.un(type, eventCache.get(eventKey)[layerKey]);\r\n        }\r\n        eventCache.get(eventKey)[layerKey] = clickFun;\r\n        console.log(eventCache.get(eventKey));\r\n        mapObj.on(type, clickFun);\r\n    }\r\n}\r\n\r\nfunction removeCustomEvent(paramObj) {\r\n    var type = paramObj.type;\r\n    var eventKey = paramObj.mapId + '_' + type;\r\n    var layerKey = paramObj.mapId + '_' + paramObj.layerId;\r\n    var mapObj = mapCache.get(paramObj.mapId);\r\n    var eventObjs;\r\n\r\n    if (eventCache.containsKey(eventKey)) {\r\n        eventObjs = eventCache.get(eventKey);\r\n        for (var evt in eventObjs) {\r\n            if (evt == layerKey && eventObjs.hasOwnProperty(evt)) {\r\n                mapObj.un(type, eventObjs[evt]);\r\n                eventObjs[evt] = null;\r\n                delete eventObjs[evt];\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction registerClick(paramObj) {\r\n    paramObj.type = eventType.singleclick;\r\n    registerCustomEvent(paramObj);\r\n}\r\n\r\nfunction unRegisterClick(paramObj) {\r\n    paramObj.type = eventType.singleclick;\r\n    removeCustomEvent(paramObj);\r\n}\r\n\r\nfunction registerDblclick(paramObj) {\r\n    paramObj.type = eventType.dblclick;\r\n    registerCustomEvent(paramObj);\r\n}\r\n\r\nfunction unRegisterDblclick(paramObj) {\r\n    paramObj.type = eventType.dblclick;\r\n    removeCustomEvent(paramObj);\r\n}\r\n\r\nfunction registerMouseover(paramObj) {\r\n    paramObj.type = eventType.mouseover;\r\n    registerCustomEvent(paramObj);\r\n}\r\n\r\nfunction unRegisterMouseover(paramObj) {\r\n    paramObj.type = eventType.mouseover;\r\n    removeCustomEvent(paramObj);\r\n}\r\n\r\nfunction registerRightclick(paramObj) {\r\n    var layerKey = paramObj.mapId + '_' + paramObj.layerId;\r\n    if (!mapCache.get(paramObj.mapId) || !layerCache.get(layerKey)) {\r\n        return;\r\n    }\r\n    var mapObj = mapCache.get(paramObj.mapId)\r\n    var viewPort = mapObj.getViewport();\r\n    var eventKey = paramObj.mapId + '_' + eventType.right;\r\n\r\n    if (!eventCache.containsKey(eventKey)) {\r\n        eventCache.put(eventKey, {});\r\n    }\r\n\r\n    if (paramObj.callbackfun && typeof(paramObj.callbackfun) == 'function') {\r\n        var rightClickFun = function(evt) {\r\n            evt.preventDefault();\r\n            var featureObj = {};\r\n            var coordinate3857 = mapObj.getEventCoordinate(evt);\r\n            featureObj.evtCoordinate = toLonLat(coordinate3857);\r\n            featureObj.map = mapObj;\r\n\r\n            var pixel = mapObj.getPixelFromCoordinate(coordinate3857);\r\n\r\n            var feaFun = function(feature, layer) {\r\n                var layerObj = {\r\n                    feature: undefined,\r\n                    layer: undefined\r\n                };\r\n                if (feature) {\r\n                    layerObj.feature = feature;\r\n                    layerObj.layer = layer;\r\n                }\r\n                return layerObj;\r\n            }\r\n\r\n            var layerInfo = mapObj.forEachFeatureAtPixel(pixel, feaFun);\r\n            if (!layerInfo || !layerInfo.feature) {\r\n                return;\r\n            }\r\n            featureObj.feature = layerInfo.feature;\r\n            featureObj.layer = layerInfo.layer;\r\n            featureObj.coordinate = toLonLat(featureObj.feature.getGeometry().getCoordinates());\r\n            featureObj.data = featureObj.feature.get('data');\r\n\r\n            paramObj.callbackfun(featureObj);\r\n        }\r\n        if (eventCache.get(eventKey).hasOwnProperty(layerKey)) {\r\n            viewPort.removeEventListener(eventType.right, eventCache.get(eventKey)[layerKey]);\r\n        }\r\n        eventCache.get(eventKey)[layerKey] = rightClickFun;\r\n        viewPort.addEventListener(eventType.right, rightClickFun, false);\r\n    }\r\n}\r\n\r\nfunction unRegisterRightclick(paramObj) {\r\n    var eventKey = paramObj.mapId + '_' + eventType.right;\r\n    var layerKey = paramObj.mapId + '_' + paramObj.layerId;\r\n    var viewPort = mapCache.get(paramObj.mapId).getViewport();\r\n    var eventObjs;\r\n\r\n    if (eventCache.containsKey(eventKey)) {\r\n        eventObjs = eventCache.get(eventKey);\r\n        for (var evt in eventObjs) {\r\n            if (evt == layerKey && eventObjs.hasOwnProperty(evt)) {\r\n                viewPort.removeEventListener('contextmenu', eventObjs[evt]);\r\n                eventObjs[evt] = null;\r\n                delete eventObjs[evt];\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    createLayer,\r\n    removeLayer,\r\n    getLayer,\r\n    registerClick,\r\n    unRegisterClick,\r\n    registerDblclick,\r\n    unRegisterDblclick,\r\n    registerRightclick,\r\n    unRegisterRightclick,\r\n    registerMouseover,\r\n    unRegisterMouseover,\r\n    registerCustomEvent\r\n}","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /*@__PURE__*/(function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n\n/**\n * @classesc\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar Atlas = function Atlas(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array<AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object<string, AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function get (id) {\n  return this.entries_[id] || null;\n};\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback`.\n * @return {?AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function add (id, width, height, renderCallback, opt_this) {\n  for (var i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    var block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n        block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function split_ (index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {AtlasBlock} */\n  var newBlock1;\n  /** @type {AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {AtlasBlock} newBlock1 The 1st block to add.\n * @param {AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function updateBlocks_ (index, newBlock1, newBlock2) {\n  var args = /** @type {Array<*>} */ ([index, 1]);\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\n\nexport default Atlas;\n\n//# sourceMappingURL=Atlas.js.map","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {VOID} from '../functions.js';\nimport Atlas from './Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nvar INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nvar MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @classdesc\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n * @api\n */\nvar AtlasManager = function AtlasManager(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function getInfo (id) {\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {Array<import(\"./Atlas.js\").default>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?import(\"./Atlas.js\").AtlasInfo} The position and atlas image for the entry,\n *  or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function getInfo_ (atlases, id) {\n  for (var i = 0, ii = atlases.length; i < ii; ++i) {\n    var atlas = atlases[i];\n    var info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n * @param {import(\"./Atlas.js\").AtlasInfo} info The info for the real image.\n * @param {import(\"./Atlas.js\").AtlasInfo} hitInfo The info for the hit-detection\n *  image.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function mergeInfos_ (info, hitInfo) {\n  return (\n    /** @type {AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=} opt_renderHitCallback Called to render a hit-detection image onto a hit\n *  detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?AtlasManagerInfo}The position and atlas image for the\n *  entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function add (id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : VOID;\n\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?import(\"./Atlas.js\").AtlasInfo}The position and atlas image for the entry,\n *  or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function add_ (isHitAtlas, id, width, height, renderCallback, opt_this) {\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size = (void 0);\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\n\nexport default AtlasManager;\n\n//# sourceMappingURL=AtlasManager.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {import(\"./TextPlacement.js\").default|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {import(\"./TextPlacement.js\").default|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/style\n */\n\n\nexport {default as Atlas} from './style/Atlas.js';\nexport {default as AtlasManager} from './style/AtlasManager.js';\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n\n//# sourceMappingURL=style.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\nvar IconImage = /*@__PURE__*/(function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function isTainted_ () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      var context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /*@__PURE__*/(function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = /*@__PURE__*/(function (TileImage) {\n  function TileWMS(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    var params = options.params || {};\n\n    var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n\n  }\n\n  if ( TileImage ) TileWMS.__proto__ = TileImage;\n  TileWMS.prototype = Object.create( TileImage && TileImage.prototype );\n  TileWMS.prototype.constructor = TileWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  TileWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getGutter = function getGutter () {\n    return this.gutter_;\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileWMS.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      var tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n    /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileWMS.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  };\n\n  /**\n   * @private\n   */\n  TileWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return TileWMS;\n}(TileImage));\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileWMS;\n\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/source/BingMaps\n */\n\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /*@__PURE__*/(function (TileImage) {\n  function BingMaps(options) {\n\n    var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    TileImage.call(this, {\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n        this.imagerySet_ +\n        '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n        '&c=' + this.culture_;\n\n    requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n      'jsonp');\n\n  }\n\n  if ( TileImage ) BingMaps.__proto__ = TileImage;\n  BingMaps.prototype = Object.create( TileImage && TileImage.prototype );\n  BingMaps.prototype.constructor = BingMaps;\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  BingMaps.prototype.getApiKey = function getApiKey () {\n    return this.apiKey_;\n  };\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  BingMaps.prototype.getImagerySet = function getImagerySet () {\n    return this.imagerySet_;\n  };\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  BingMaps.prototype.handleImageryMetadataResponse = function handleImageryMetadataResponse (response) {\n    if (response.statusCode != 200 ||\n        response.statusDescription != 'OK' ||\n        response.authenticationResultCode != 'ValidCredentials' ||\n        response.resourceSets.length != 1 ||\n        response.resourceSets[0].resources.length != 1) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    var resource = response.resourceSets[0].resources[0];\n    var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    var sourceProjection = this.getProjection();\n    var extent = extentFromProjection(sourceProjection);\n    var scale = this.hidpi_ ? 2 : 1;\n    var tileSize = resource.imageWidth == resource.imageHeight ?\n      resource.imageWidth / scale :\n      [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    var tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize\n    });\n    this.tileGrid = tileGrid;\n\n    var culture = this.culture_;\n    var hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function(subdomain) {\n        var quadKeyTileCoord = [0, 0, 0];\n        var imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function(tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n              var url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      }));\n\n    if (resource.imageryProviders) {\n      var transform = getTransformFromProjections(\n        getProjection('EPSG:4326'), this.getProjection());\n\n      this.setAttributions(function(frameState) {\n        var attributions = [];\n        var viewState = frameState.viewState;\n        var tileGrid = this.getTileGrid();\n        var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\n        var zoom = tileCoord[0];\n        resource.imageryProviders.map(function(imageryProvider) {\n          var intersecting = false;\n          var coverageAreas = imageryProvider.coverageAreas;\n          for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            var coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              var bbox = coverageArea.bbox;\n              var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              var extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      }.bind(this));\n    }\n\n    this.setState(SourceState.READY);\n  };\n\n  return BingMaps;\n}(TileImage));\n\nexport default BingMaps;\n\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/control/MousePosition\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from './Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /*@__PURE__*/(function (Control) {\n  function MousePosition(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    Control.call(this, {\n      element: element,\n      render: options.render || render,\n      target: options.target\n    });\n\n    listen(this,\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_, this);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastMouseMovePixel_ = null;\n\n  }\n\n  if ( Control ) MousePosition.__proto__ = Control;\n  MousePosition.prototype = Object.create( Control && Control.prototype );\n  MousePosition.prototype.constructor = MousePosition;\n\n  /**\n   * @private\n   */\n  MousePosition.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    this.transform_ = null;\n  };\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getCoordinateFormat = function getCoordinateFormat () {\n    return (\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n    );\n  };\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION))\n    );\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseMove = function handleMouseMove (event) {\n    var map = this.getMap();\n    this.lastMouseMovePixel_ = map.getEventPixel(event);\n    this.updateHTML_(this.lastMouseMovePixel_);\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseOut = function handleMouseOut (event) {\n    this.updateHTML_(null);\n    this.lastMouseMovePixel_ = null;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MousePosition.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      var viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this),\n        listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this),\n          listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setCoordinateFormat = function setCoordinateFormat (format) {\n    this.set(COORDINATE_FORMAT, format);\n  };\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setProjection = function setProjection (projection) {\n    this.set(PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  MousePosition.prototype.updateHTML_ = function updateHTML_ (pixel) {\n    var html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        var projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      var map = this.getMap();\n      var coordinate = map.getCoordinateFromPixel(pixel);\n      if (coordinate) {\n        this.transform_(coordinate, coordinate);\n        var coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  };\n\n  return MousePosition;\n}(Control));\n\n\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n}\n\n\nexport default MousePosition;\n\n//# sourceMappingURL=MousePosition.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = /*@__PURE__*/(function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return this.get(UNITS_PROP);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map","var core = module.exports = { version: '2.6.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /*@__PURE__*/(function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /*@__PURE__*/(function (PointerInteraction) {\n  function Draw(options) {\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  Draw.prototype.handleEvent = function handleEvent (event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\n    var pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      var now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, event) && pass;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleUpEvent = function handleUpEvent (event) {\n    var pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    var circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  };\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates;\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = /** @type {LineCoordType} */ (coordinates)[0];\n    var end = /** @type {LineCoordType} */ (coordinates)[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /*@__PURE__*/(function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","import { mapType } from './../core/constant';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport TileWMS from 'ol/source/TileWMS';\r\nimport { OSM } from 'ol/source';\r\nimport {get } from 'ol/proj';\r\nimport TileGrid from 'ol/tilegrid/TileGrid';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport BingMaps from 'ol/source/BingMaps';\r\n\r\n/**\r\n * 根据加载地图类型，调用对应方法加载底图\r\n * @param {baseLayerType--底图类型} paramObj \r\n */\r\nfunction addBaseLayer(paramObj) {\r\n    var baseLayer;\r\n    if (paramObj && !paramObj.baseLayerType) {\r\n        paramObj.baseLayerType = mapType.osm;\r\n    }\r\n    switch (paramObj.baseLayerType) {\r\n        case mapType.wms:\r\n            baseLayer = wmsLayer(paramObj);\r\n            break;\r\n        case mapType.osm:\r\n            baseLayer = osmLayer();\r\n            break;\r\n        case mapType.xyz:\r\n            baseLayer = arcgisXYZ(paramObj);\r\n            break;\r\n        case mapType.bingMap:\r\n            baseLayer = bingMap(paramObj);\r\n            break;\r\n        case mapType.gaoDe:\r\n            baseLayer = GaoDeMap(paramObj);\r\n            break;\r\n    }\r\n    return baseLayer;\r\n}\r\n\r\n/**\r\n * 加载wms图层\r\n * @param {*} paramObj \r\n */\r\nlet wmsLayer = function(paramObj) {\r\n    var tileSource = new TileWMS({\r\n        url: paramObj.url,\r\n        params: {\r\n            'LAYERS': paramObj.layers\r\n        },\r\n        projection: paramObj.projection || 'EPSG:3857',\r\n        serverType: paramObj.serverType || 'geoserver',\r\n        wrapX: paramObj.wrapX || false,\r\n        transition: 0,\r\n    });\r\n    var tileLayer = new TileLayer({\r\n        opacity: 1,\r\n        visible: true,\r\n        extent: paramObj.extent || undefined,\r\n        zIndex: paramObj.zIndex,\r\n        // minResolution: ,\r\n        // maxResolution: ,\r\n        // preload: 0,\r\n        source: tileSource,\r\n        // map: ,\r\n        useInterimTilesOnError: true\r\n    })\r\n\r\n    return tileLayer;\r\n};\r\n\r\n/**\r\n * 加载OSM图层\r\n */\r\nlet osmLayer = function() {\r\n    var osm = new TileLayer({\r\n        source: new OSM({ wrapX: false })\r\n    })\r\n    return osm;\r\n};\r\n\r\nlet arcgisXYZ = function(paramObj) {\r\n    // let url = \"http://10.10.3.141:6080/arcgis/rest/services/xian/xian_map/MapServer/tile/{z}/{y}/{x}\";\r\n\r\n    // let resolutions = [\r\n    //     3.9687579375158752,\r\n    //     2.6458386250105836,\r\n    //     1.3229193125052918,\r\n    //     0.6614596562526459,\r\n    //     0.33072982812632296\r\n    // ];\r\n\r\n    // let extent = [131064.17902947527, 36625.10310556023, 138757.19417525065, 44126.534893115226];\r\n\r\n\r\n    // let projection = get('EPSG:3857');\r\n    // let origin = [-1.82908E7, 2.06816E7];\r\n    var curTileGrid = new TileGrid({\r\n        tileSize: 256,\r\n        origin: paramObj.origin,\r\n        extent: paramObj.extent,\r\n        resolutions: paramObj.resolutions\r\n    });\r\n\r\n    var tileArcGISXYZ = new XYZ({\r\n        tileGrid: curTileGrid,\r\n        projection: paramObj.projection || get('EPSG:3857'),\r\n        url: paramObj.url,\r\n        wrapX: paramObj.wrapX || false\r\n    });\r\n\r\n    var xyzlayer = new TileLayer({\r\n        source: tileArcGISXYZ\r\n    });\r\n\r\n    return xyzlayer;\r\n}\r\n\r\nlet bingMap = function(paramObj) {\r\n    var bingMapSource = new BingMaps({\r\n        key: paramObj.key || 'AhOrlE_79Ofb8nZw5emqtOF5hNk34YqDyy7K2ocyCY4JT5y0n_6A93KiGaT0OT5x',\r\n        culture: paramObj.language || 'en-us',\r\n        imagerySet: paramObj.type || 'Aerial',\r\n        wrapX: paramObj.wrapX || false\r\n    });\r\n    var bingMap = new TileLayer({\r\n        source: bingMapSource\r\n    });\r\n\r\n    return bingMap;\r\n}\r\n\r\nlet GaoDeMap = function(paramObj) {\r\n    var sourceXYZ = new XYZ({\r\n        url: paramObj.url || \"http://webst0{1-4}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=7&x={x}&y={y}&z={z}\",\r\n        wrapX: paramObj.wrapX || false\r\n    });\r\n\r\n    var GaoDelayer = new TileLayer({\r\n        source: sourceXYZ\r\n    });\r\n\r\n    return GaoDelayer;\r\n}\r\n\r\nexport {\r\n    addBaseLayer\r\n}","import View from 'ol/View';\r\nimport {get } from 'ol/proj';\r\n\r\nlet createView = function(paramObj) {\r\n    var baseView = new View({\r\n        center: paramObj.center || [108.76705170, 34.43690300],\r\n        projection: paramObj.projection || get('EPSG:4326'),\r\n        maxZoom: paramObj.maxZoom || 28,\r\n        minZoom: paramObj.minZoom || 0,\r\n        zoom: paramObj.zoom || 14,\r\n        // zoomFactor: 4\r\n    });\r\n    return baseView;\r\n}\r\n\r\n\r\nexport {\r\n    createView\r\n}","function HashMap() {\r\n    var length = 0;\r\n    var obj = new Object();\r\n    this.isEmpty = function() {\r\n        return length == 0;\r\n    };\r\n\r\n    this.containsKey = function(key) {\r\n        return (key in obj);\r\n    };\r\n\r\n    this.containsValue = function(value) {\r\n        for (var key in obj) {\r\n            if (obj[key] == value) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    this.put = function(key, value) {\r\n        if (!this.containsKey(key)) {\r\n            length++;\r\n        }\r\n        obj[key] = value;\r\n    };\r\n\r\n    this.get = function(key) {\r\n        return this.containsKey(key) ? obj[key] : null;\r\n    };\r\n\r\n    this.remove = function(key) {\r\n        if (this.containsKey(key)) {\r\n            delete obj[key];\r\n            length--;\r\n        }\r\n    };\r\n\r\n    this.values = function() {\r\n        var _values = new Array();\r\n        for (var key in obj) {\r\n            _values.push(obj[key]);\r\n        }\r\n        return _values;\r\n    };\r\n\r\n    this.keySet = function() {\r\n        var _keys = new Array();\r\n        for (var key in obj) {\r\n            _keys.push(key);\r\n        }\r\n        return _keys;\r\n    };\r\n\r\n    this.size = function() {\r\n        return length;\r\n    };\r\n\r\n    this.clear = function() {\r\n        length = 0;\r\n        obj = new Object();\r\n    }\r\n}\r\n\r\nexport {\r\n    HashMap\r\n}","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","import Draw, { createBox } from 'ol/interaction/Draw';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport { mapCache, geometryCache, layerCache } from '../core/cache';\r\nimport { layerzIndex, geometryType } from './../core/constant';\r\nimport Point from 'ol/geom/Point';\r\nimport { toLonLat } from 'ol/proj';\r\nimport Circle from 'ol/geom/Circle';\r\nimport LineString from 'ol/geom/LineString';\r\n\r\nvar draw;\r\n\r\nfunction drawGeometry(paramObj) {\r\n\r\n    var mapObj = mapCache.get(paramObj.mapId);\r\n\r\n    var geometryKey = paramObj.mapId + '_' + paramObj.type;\r\n    var geometrySource, geometryLayer, geometryFunction;\r\n    var type = paramObj.type;\r\n\r\n    if (geometryCache.containsKey(geometryKey)) {\r\n        geometryLayer = geometryCache.get(geometryKey);\r\n        geometrySource = geometryLayer.getSource();\r\n    } else {\r\n        geometrySource = new VectorSource();\r\n        geometryLayer = new VectorLayer({\r\n            source: geometrySource,\r\n            zIndex: layerzIndex.geometry\r\n        })\r\n\r\n        geometryLayer.set('layerId', paramObj.type);\r\n        geometryCache.put(geometryKey, geometryLayer);\r\n        layerCache.put(geometryKey, geometryLayer);\r\n        mapObj.addLayer(geometryLayer);\r\n    }\r\n\r\n    if (draw) {\r\n        mapObj.removeInteraction(draw);\r\n    }\r\n\r\n    if (paramObj.type == geometryType.box) {\r\n        type = geometryType.circle;\r\n        geometryFunction = createBox();\r\n    }\r\n\r\n\r\n    draw = new Draw({\r\n        type: type,\r\n        source: geometrySource,\r\n        geometryFunction: geometryFunction,\r\n        // maxPoints: 3\r\n    });\r\n\r\n    draw.on('drawend', function(obj) {\r\n        if (!paramObj.callbackfun) {\r\n            return;\r\n        }\r\n        var callbackObj = {};\r\n        if (paramObj.type == geometryType.circle) {\r\n            callbackObj.center = toLonLat(obj.feature.getGeometry().getCenter());\r\n            callbackObj.radius = obj.feature.getGeometry().getRadius();\r\n        } else {\r\n            if (paramObj.type == geometryType.point) {\r\n                callbackObj.coordinate = toLonLat(obj.feature.getGeometry().getCoordinates());\r\n            } else if (paramObj.type == geometryType.line) {\r\n                var coordinates4326 = [];\r\n                var coordinates3857 = obj.feature.getGeometry().getCoordinates();\r\n                for (var coor = 0; coor < coordinates3857.length; coor++) {\r\n                    coordinates4326.push(toLonLat(coordinates3857[coor]));\r\n                };\r\n                callbackObj.coordinates = coordinates4326;\r\n            } else {\r\n                var coordinates4326 = [];\r\n                var coordinates3857 = obj.feature.getGeometry().getCoordinates()[0];\r\n                for (var coor = 0; coor < coordinates3857.length; coor++) {\r\n                    coordinates4326.push(toLonLat(coordinates3857[coor]));\r\n                };\r\n                callbackObj.coordinates = coordinates4326;\r\n            }\r\n        }\r\n\r\n        paramObj.callbackfun(callbackObj);\r\n    })\r\n\r\n    mapObj.addInteraction(draw);\r\n}\r\n\r\nfunction undrawGeometry(mapId) {\r\n    if (!mapId) {\r\n        return;\r\n    }\r\n    if (mapCache.containsKey(mapId)) {\r\n        var mapObj = mapCache.get(mapId);\r\n        mapObj.removeInteraction(draw);\r\n\r\n        draw = null;\r\n    }\r\n}\r\n\r\nfunction getDraw() {\r\n    return draw;\r\n}\r\n\r\nfunction resetDraw() {\r\n    draw = null;\r\n}\r\n\r\nexport {\r\n    drawGeometry,\r\n    undrawGeometry,\r\n    getDraw,\r\n    resetDraw\r\n}","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","import { Map } from './map/index';\r\nimport { Proj, Contant, Popup, mapCache } from './core/index';\r\nimport { BaseLayer, Geometry, HeatMap, Point, Circle, Icon, Stand } from './layer/index';\r\n\r\nexport {\r\n    Map,\r\n    Proj,\r\n    Contant,\r\n    Popup,\r\n    mapCache,\r\n    BaseLayer,\r\n    Geometry,\r\n    HeatMap,\r\n    Point,\r\n    Circle,\r\n    Icon,\r\n    Stand\r\n};","import * as Map from './baseMap';\r\nimport * as TileLayer from './tileLayer';\r\n\r\nexport {\r\n    Map,\r\n    TileLayer\r\n}","import Map from 'ol/Map';\r\nimport * as TileLayer from './tileLayer';\r\nimport * as BaseView from '../layer/view';\r\nimport Collection from 'ol/Collection';\r\nimport Zoom from 'ol/control/Zoom';\r\nimport MousePosition from 'ol/control/MousePosition';\r\nimport ScaleLine from 'ol/control/ScaleLine';\r\nimport { createStringXY } from 'ol/coordinate';\r\nimport { mapCache, layerCache, geometryCache } from '../core/cache';\r\nimport RotateControl from '../core/extendControl';\r\nimport { getDraw, resetDraw } from '../layer/geometry';\r\n\r\nlet createMap = function(paramObj) {\r\n    if (!paramObj.mapId) {\r\n        return;\r\n    }\r\n    var map;\r\n    if (mapCache.containsKey(paramObj.mapId)) {\r\n        map = mapCache.get(paramObj.mapId);\r\n        return;\r\n    }\r\n\r\n    var baseLayer = TileLayer.addBaseLayer(paramObj);\r\n    var baseView = BaseView.createView(paramObj);\r\n\r\n    map = new Map({\r\n        view: baseView,\r\n        layers: [\r\n            baseLayer\r\n        ],\r\n        target: paramObj.mapId,\r\n        controls: new Collection([\r\n            new MousePosition({ coordinateFormat: createStringXY(8), projection: 'EPSG:4326' }),\r\n            new Zoom(),\r\n            new ScaleLine(),\r\n            new RotateControl()\r\n        ])\r\n    });\r\n\r\n    mapCache.put(paramObj.mapId, map);\r\n\r\n    addZoom(baseView);\r\n\r\n    baseView.on('change:resolution', function(e) { addZoom(e.target) })\r\n}\r\n\r\nlet addZoom = function(view) {\r\n    if (!document.getElementsByClassName(\"zoomNum\")[0]) {\r\n        var zoomNum = document.createElement(\"button\");\r\n        zoomNum.className = \"zoomNum\";\r\n        document.getElementsByClassName(\"ol-zoom\")[0].appendChild(zoomNum);\r\n    }\r\n\r\n\r\n    document.getElementsByClassName(\"zoomNum\")[0].innerHTML = Math.floor(view.getZoom());\r\n\r\n\r\n}\r\n\r\nlet getMapObj = function(mapId) {\r\n    if (mapCache.containsKey(mapId)) {\r\n        return mapCache.get(mapId);\r\n    }\r\n}\r\n\r\nlet removeMap = function(mapId) {\r\n    if (mapCache.containsKey(mapId)) {\r\n        var mapObj = mapCache.get(mapId);\r\n\r\n        var layers = mapObj.getLayers().getArray();\r\n        for (var i = 0; i < layers.length; i++) {\r\n            mapObj.removeLayer(layers[i]);\r\n        }\r\n\r\n        var controls = mapObj.getControls().getArray();\r\n        for (var c = 0; c < controls.length; c++) {\r\n            mapObj.removeControl(controls[c]);\r\n        }\r\n\r\n        layerCache.clear();\r\n        geometryCache.clear();\r\n\r\n        var draw = getDraw();\r\n        draw && mapObj.removeInteraction(draw);\r\n        resetDraw();\r\n        mapObj.setTarget(undefined);\r\n        mapObj = null;\r\n        mapCache.remove(mapId);\r\n    }\r\n}\r\n\r\nlet setMapCenter = function(paramObj) {\r\n    if (!paramObj.mapId) {\r\n        return;\r\n    }\r\n\r\n    if (mapCache.containsKey(paramObj.mapId)) {\r\n        var mapObj = mapCache.get(paramObj.mapId);\r\n\r\n        paramObj.center && mapObj.getView().setCenter(paramObj.center);\r\n        paramObj.zoom && mapObj.getView().setZoom(paramObj.zoom);\r\n    }\r\n\r\n};\r\n\r\nexport {\r\n    createMap,\r\n    getMapObj,\r\n    removeMap,\r\n    setMapCenter\r\n}","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","import { Control } from 'ol/control';\r\n\r\nvar RotateControl = (function(Control) {\r\n    function RotateControl(paramObj) {\r\n        var options = paramObj || {};\r\n\r\n        this.angle = 0;\r\n\r\n        var button = document.createElement('button');\r\n        button.innerHTML = \"⇧\";\r\n        button.title = \"Rotate\";\r\n        \r\n        var element = document.createElement('div');\r\n        element.className = 'ol-rotate ol-unselectable ol-control';\r\n\r\n        element.appendChild(button);\r\n\r\n        Control.call(this, {\r\n            element: element,\r\n            target: options.target\r\n        });\r\n\r\n        element.addEventListener('click', this.handleRotate.bind(this), false);\r\n        // element.addEventListener('dblclick', this.handleDblRotate.bind(this), false);\r\n    }\r\n\r\n    RotateControl.__proto__ = Control;\r\n    RotateControl.prototype = Object.create(Control.prototype);\r\n    RotateControl.prototype.constructor = RotateControl;\r\n\r\n    RotateControl.prototype.handleRotate = function handleRotate() {\r\n        this.angle += Math.PI / 25;\r\n        this.element.getElementsByTagName('button')[0].style.transform = 'rotate(' + this.angle + 'rad)';\r\n        this.getMap().getView().setRotation(this.angle);\r\n    }\r\n\r\n    RotateControl.prototype.handleDblRotate = function handleDblRotate() {\r\n        this.angle = 0;\r\n        this.element.getElementsByTagName('button')[0].style.transform = 'rotate(' + this.angle + 'rad)';\r\n        this.getMap().getView().setRotation(this.angle);\r\n    }\r\n\r\n    return RotateControl;\r\n}(Control));\r\n\r\nexport default RotateControl;","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","module.exports = true;\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","import { Proj } from './ol.js';\r\nimport { HashMap } from './hashMap.js';\r\nimport * as Contant from './constant';\r\nimport * as Popup from './popup';\r\nimport { mapCache } from './cache';\r\n \r\nexport {\r\n    Proj,\r\n    HashMap,\r\n    Contant,\r\n    Popup,\r\n    mapCache\r\n}","import * as Proj from 'ol/proj';\r\n\r\nexport {\r\n    Proj\r\n}","import Overlay from 'ol/Overlay';\r\nimport { mapCache, popupCache } from './cache';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport { popupId } from './constant';\r\n\r\nfunction addPopup(paramObj) {\r\n    if (!paramObj.mapId || !mapCache.containsKey(paramObj.mapId)) {\r\n        return;\r\n    }\r\n\r\n    var isHasPopup = false;\r\n    var isHasPopup = document.getElementById(popupId.container);\r\n    var container, content, closer, overlay,\r\n        mapObj = mapCache.get(paramObj.mapId);\r\n    if (!isHasPopup) {\r\n        container = document.createElement('div');\r\n        content = document.createElement('div');\r\n        closer = document.createElement('a');\r\n\r\n        container.id = popupId.container;\r\n        container.className = popupId.containerClass;\r\n\r\n        content.id = popupId.content;\r\n        content.className = popupId.contentClass;\r\n\r\n        closer.id = popupId.closer;\r\n        closer.className = popupId.closerClass;\r\n\r\n        container.appendChild(closer);\r\n        container.appendChild(content);\r\n\r\n        document.body.appendChild(container);\r\n\r\n        overlay = new Overlay({\r\n            id: popupId.container,\r\n            element: container,\r\n            autoPan: true,\r\n            positioning: 'bottm-left',\r\n        })\r\n\r\n        mapObj.addOverlay(overlay);\r\n    }\r\n\r\n    document.getElementById(popupId.content).innerHTML = paramObj.content;\r\n\r\n    document.getElementById(popupId.closer).addEventListener('click', function(e) {\r\n        removePopup(paramObj.mapId);\r\n    }, false);\r\n\r\n    overlay = mapObj.getOverlayById(popupId.container);\r\n\r\n    paramObj.coordinate && overlay.setPosition(fromLonLat(paramObj.coordinate));\r\n    paramObj.offset && overlay.setOffset(paramObj.offset);\r\n    paramObj.positioning && overlay.setPositioning(paramObj.positioning);\r\n}\r\n\r\nfunction removePopup(mapId) {\r\n    var mapObj = mapCache.get(mapId);\r\n    mapObj.removeOverlay(mapObj.getOverlayById(popupId.container));\r\n}\r\n\r\nfunction creatToolTip(paramObj) {\r\n  if (!paramObj.mapId || !mapCache.containsKey(paramObj.mapId) || !paramObj.tipsId) {\r\n    return;\r\n  }\r\n\r\n  var overlayKey = paramObj.mapId + '_' + paramObj.tipsId;\r\n  var mapObj = mapCache.get(paramObj.mapId);\r\n  var tooltip = new Overlay({\r\n    element: paramObj.element,\r\n    id: paramObj.tipsId,\r\n    autoPan: false,\r\n    positioning: 'bottom-left',\r\n    stopEvent: false\r\n  })\r\n  if (popupCache.containsKey(overlayKey)) {\r\n    popupCache.get(overlayKey).push(tooltip);\r\n  } else {\r\n    var tooltipArr = [];\r\n    tooltipArr.push(tooltip);\r\n    popupCache.put(overlayKey, tooltipArr);\r\n\r\n  }\r\n  mapObj.addOverlay(tooltip);\r\n  paramObj.element && tooltip.setElement(paramObj.element);\r\n\r\n  paramObj.coordinate && tooltip.setPosition(fromLonLat(paramObj.coordinate));\r\n  paramObj.offset && tooltip.setOffset(paramObj.offset);\r\n  paramObj.positioning && tooltip.setPositioning(paramObj.positioning);\r\n}\r\n\r\nfunction removeToolTip(mapId, tipsId) {\r\n    if (!mapId || !tipsId || !mapCache.containsKey(mapId)) {\r\n        return;\r\n    }\r\n\r\n    var mapObj = mapCache.get(mapId);\r\n    var overlayKey = mapId + '_' + tipsId;\r\n    var tooltip;\r\n    if (popupCache.containsKey(overlayKey)) {\r\n        tooltip = popupCache.get(overlayKey);\r\n        for(var i = tooltip.length - 1; i >= 0; i--) {\r\n          if (tooltip[i]) {\r\n            mapObj.removeOverlay(tooltip[i]);\r\n            tooltip[i] = null;\r\n          }\r\n        }\r\n        tooltip = null;\r\n        popupCache.remove(overlayKey);\r\n    }\r\n}\r\n\r\nexport {\r\n    addPopup,\r\n    removePopup,\r\n    creatToolTip,\r\n    removeToolTip\r\n}","import * as BaseView from './view';\r\nimport * as BaseLayer from './baseLayer';\r\nimport * as Geometry from './geometry';\r\nimport * as HeatMap from './heatMap';\r\nimport * as Point from './pointLayer';\r\nimport * as Circle from './circleLayer';\r\nimport * as Icon from './icon';\r\nimport * as Stand from './progressLayer';\r\n\r\nexport {\r\n    BaseView,\r\n    BaseLayer,\r\n    Geometry,\r\n    HeatMap,\r\n    Point,\r\n    Circle,\r\n    Icon,\r\n    Stand\r\n}","import Heatmap from 'ol/layer/Heatmap';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport Feature from 'ol/Feature';\r\nimport Point from 'ol/geom/Point';\r\nimport { mapCache, layerCache } from '../core/cache';\r\nimport { fromLonLat } from 'ol/proj';\r\n\r\nfunction addHeatMap(paramObj) {\r\n    if (!paramObj.mapId || !mapCache.containsKey(paramObj.mapId)) {\r\n        return;\r\n    }\r\n    var mapObj = mapCache.get(paramObj.mapId);\r\n    var _projection = mapObj.getView().getProjection().getCode();\r\n    var layerkey = paramObj.mapId + '_' + paramObj.layerId;\r\n\r\n    var feature, geom, _features = [],\r\n        layerSource,\r\n        heatmap;\r\n    var datas = paramObj.datas;\r\n\r\n    for (var f = 0; f < datas.length; f++) {\r\n        var _coordinate = datas[f].coordinate;\r\n        if (_projection == 'EPSG:3857') {\r\n            _coordinate = fromLonLat(datas[f].coordinate);\r\n        }\r\n        geom = new Point(_coordinate);\r\n        feature = new Feature({\r\n            geometry: geom,\r\n            data: datas[f],\r\n            weight: datas[f].weight\r\n        });\r\n\r\n        feature.setId(datas[f].id);\r\n\r\n        _features.push(feature);\r\n    }\r\n\r\n    if (layerCache.containsKey(layerkey)) {\r\n        mapObj.removeLayer(layerCache.get(layerkey));\r\n    }\r\n\r\n    layerSource = new VectorSource({\r\n        features: _features\r\n    });\r\n\r\n    heatmap = new Heatmap({\r\n        opacity: paramObj.opacity || 1,\r\n        gradient: paramObj.gradient || ['#00f', '#0ff', '#0f0', '#ff0', '#f00'], //从外到里\r\n        radius: paramObj.radius || 8,\r\n        blur: paramObj.blur || 15,\r\n        shadow: paramObj.shadow || 250,\r\n        source: layerSource\r\n    });\r\n\r\n    heatmap.set(layerkey);\r\n\r\n    layerCache.put(layerkey, heatmap);\r\n    mapObj.addLayer(heatmap);\r\n}\r\n\r\nfunction removeHeatmap(mapId, layerId) {\r\n    if (!mapId || !layerId) {\r\n        return;\r\n    }\r\n    var mapObj = mapCache.containsKey(mapId) && mapCache.get(mapId);\r\n    var layerObj = layerCache.containsKey(mapId + \"_\" + layerId) && layerCache.get(mapId + \"_\" + layerId);\r\n\r\n    mapObj.removeLayer(layerObj);\r\n    layerObj = null;\r\n    layerCache.remove(mapId + \"_\" + layerId);\r\n}\r\n\r\nexport {\r\n    addHeatMap,\r\n    removeHeatmap\r\n}","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from './Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /*@__PURE__*/(function (VectorLayer) {\n  function Heatmap(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array<Array<import(\"../style/Style.js\").default>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    var weight = options.weight ? options.weight : 'weight';\n    var weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      var weight = weightFunction(feature);\n      var opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      var index = (255 * opacity) | 0;\n      var style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  Heatmap.prototype.createCircle_ = function createCircle_ () {\n    var radius = this.getRadius();\n    var blur = this.getBlur();\n    var halfSize = radius + blur + 1;\n    var size = 2 * halfSize;\n    var context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    var center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  };\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getBlur = function getBlur () {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  };\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getGradient = function getGradient () {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  };\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getRadius = function getRadius () {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\n    this.gradient_ = createGradient(this.getGradient());\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleStyleChanged_ = function handleStyleChanged_ () {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Post compose event\n   * @private\n   */\n  Heatmap.prototype.handleRender_ = function handleRender_ (event) {\n    var context = event.context;\n    var canvas = context.canvas;\n    var image = context.getImageData(0, 0, canvas.width, canvas.height);\n    var view8 = image.data;\n    for (var i = 0, ii = view8.length; i < ii; i += 4) {\n      var alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this.gradient_[alpha];\n        view8[i + 1] = this.gradient_[alpha + 1];\n        view8[i + 2] = this.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  };\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setBlur = function setBlur (blur) {\n    this.set(Property.BLUR, blur);\n  };\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setGradient = function setGradient (colors) {\n    this.set(Property.GRADIENT, colors);\n  };\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setRadius = function setRadius (radius) {\n    this.set(Property.RADIUS, radius);\n  };\n\n  return Heatmap;\n}(VectorLayer));\n\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n\n//# sourceMappingURL=Heatmap.js.map","import { createLayer } from './baseLayer';\r\nimport { mapCache } from './../core/cache';\r\nimport { Style, Fill, Stroke, Text } from 'ol/style';\r\nimport CircleStyle from 'ol/style/Circle';\r\nimport Feature from 'ol/Feature';\r\nimport Point from 'ol/geom/Point';\r\nimport { fromLonLat } from 'ol/proj';\r\n\r\nfunction addPointLayer(paramObj) {\r\n    var pointLayer = createLayer(paramObj);\r\n    var mapObj = mapCache.get(paramObj.mapId);\r\n\r\n    var datas = paramObj.datas;\r\n    var _projection = mapObj.getView().getProjection().getCode();\r\n\r\n    var _features = [];\r\n    var feature, geom;\r\n    var styleFun = function(point) {\r\n        return new Style({\r\n            image: new CircleStyle({\r\n                fill: new Fill({\r\n                    color: point.fillColor || \"white\"\r\n                }),\r\n                radius: point.radius || 10,\r\n                stroke: new Stroke({\r\n                    color: point.strokeColor || \"black\",\r\n                    width: point.strokeWidth != undefined ? point.strokeWidth : 2\r\n                })\r\n            }),\r\n            text: new Text({\r\n              text: point.label || \"\",\r\n              textAlign: point.text && point.text.textAlign || \"center\",\r\n              offsetX: point.text && point.text.offsetX || 0,\r\n              offsetY: point.text && point.text.offsetY || 0,\r\n              font: point.text && point.text.font || '10px sans-serif',\r\n              fill: new Fill({\r\n                color: point.text && point.text.color || \"#333\"\r\n            })\r\n            })\r\n        })\r\n    }\r\n    for (var f = 0; f < datas.length; f++) {\r\n        var _coordinate = datas[f].coordinate;\r\n        if (_projection == 'EPSG:3857') {\r\n            _coordinate = fromLonLat(datas[f].coordinate);\r\n        }\r\n        geom = new Point(_coordinate);\r\n        feature = new Feature({\r\n            geometry: geom,\r\n            data: datas[f]\r\n        });\r\n\r\n        feature.setId(datas[f].id);\r\n\r\n        _features.push(feature);\r\n        feature.setStyle(styleFun(datas[f]));\r\n    }\r\n\r\n    pointLayer.setStyle(styleFun);\r\n    pointLayer.getSource().addFeatures(_features);\r\n}\r\n\r\nexport {\r\n    addPointLayer\r\n}","import { createLayer } from './baseLayer';\r\nimport { mapCache } from './../core/cache';\r\nimport { Style, Fill, Stroke, Text, RegularShape } from 'ol/style';\r\nimport Feature from 'ol/Feature';\r\nimport Circle from 'ol/geom/Circle';\r\nimport { fromLonLat } from 'ol/proj';\r\n\r\nfunction addCircleLayer(paramObj) {\r\n    var circleLayer = createLayer(paramObj);\r\n    var mapObj = mapCache.get(paramObj.mapId);\r\n    if (!mapObj) {\r\n      return\r\n    }\r\n\r\n    var datas = paramObj.datas;\r\n    var _projection = mapObj.getView().getProjection().getCode();\r\n\r\n    var _features = [];\r\n    var feature, geom;\r\n    var styleFun = function(circle) {\r\n        return new Style({\r\n          stroke: new Stroke({\r\n            color: circle.strokeColor || 'rgba(255, 76, 106, 0.1)',\r\n            width: circle.strokeWidth || 1\r\n          }),\r\n          fill: new Fill({\r\n            color: circle.fillColor || 'rgba(255, 76, 106, 0.8)'\r\n          }),\r\n          text: new Text({\r\n            text: circle.label || \"\",\r\n            textAlign: circle.text && circle.text.textAlign || \"center\",\r\n            offsetX: circle.text && circle.text.offsetX || 0,\r\n            offsetY: circle.text && circle.text.offsetY || 0,\r\n            font: circle.text && circle.text.font || '10px sans-serif',\r\n            fill: new Fill({\r\n              color: circle.text && circle.text.color || \"#333\"\r\n            })\r\n          })\r\n        })\r\n    }\r\n    for (var f = 0; f < datas.length; f++) {\r\n        var _coordinate = datas[f].coordinate;\r\n        if (_projection == 'EPSG:3857') {\r\n            _coordinate = fromLonLat(datas[f].coordinate);\r\n        }\r\n        geom = new Circle(_coordinate, datas[f].radius * 1000);\r\n        feature = new Feature({\r\n            geometry: geom,\r\n            data: datas[f]\r\n        });\r\n\r\n        feature.setId(datas[f].id);\r\n\r\n        _features.push(feature);\r\n        feature.setStyle(styleFun(datas[f]));\r\n    }\r\n    \r\n    circleLayer.getSource().addFeatures(_features);\r\n}\r\n\r\nexport {\r\n  addCircleLayer\r\n}","import { createLayer, getLayer, removeLayer } from './baseLayer';\r\nimport Feature from 'ol/Feature';\r\nimport Point from 'ol/geom/Point';\r\nimport { Icon, Style, Text, Fill } from 'ol/style';\r\nimport { mapCache } from './../core/cache';\r\nimport { fromLonLat } from 'ol/proj';\r\n\r\nlet addIcon = function(paramObj) {\r\n  if (!paramObj.mapId || !mapCache.containsKey(paramObj.mapId)) {\r\n      return;\r\n  }\r\n\r\n  var mapObj = mapCache.get(paramObj.mapId);\r\n  var _layer = createLayer(paramObj);\r\n  var _projection = mapObj.getView().getProjection().getCode();\r\n\r\n  var featureData = paramObj.datas;\r\n  var _features = [];\r\n  var feature, geom;\r\n  for (var f = 0; f < featureData.length; f++) {\r\n      var _coordinate = featureData[f].coordinate;\r\n      if (_projection == 'EPSG:3857') {\r\n          _coordinate = fromLonLat(featureData[f].coordinate);\r\n      }\r\n      geom = new Point(_coordinate);\r\n      feature = new Feature({\r\n          geometry: geom,\r\n          imgPath: featureData[f].imgPath || 'dist/img/car_1.png',\r\n          data: featureData[f]\r\n      });\r\n\r\n      feature.setId(featureData[f].id);\r\n\r\n      _features.push(feature);\r\n      let currentZoom = mapObj.getView().getZoom();//0.18,0.4,0.88\r\n      let scale = currentZoom <= 7 ? 0.18 : ((currentZoom >= 8 && currentZoom < 9) ? 0.45 : 0.95) \r\n      if(featureData[f].imgPath) {\r\n        feature.setStyle(new Style({\r\n          image: new Icon({\r\n              src: featureData[f].imgPath,\r\n              scale: featureData[f].scale || scale\r\n          }),\r\n          text: new Text({\r\n            text: featureData[f].label,\r\n            textAlign: featureData[f].text && featureData[f].text.textAlign || \"center\",\r\n            offsetX: featureData[f].text && featureData[f].text.offsetX || 0,\r\n            offsetY: featureData[f].text && featureData[f].text.offsetY || 0,\r\n            font: featureData[f].text && featureData[f].text.font || '10px sans-serif',\r\n            fill: new Fill({\r\n              color: featureData[f].text && featureData[f].text.color || \"#333\"\r\n            })\r\n          })\r\n        }));\r\n      }else {\r\n        feature.setStyle(new Style({\r\n          text: new Text({\r\n            text: featureData[f].label,\r\n            textAlign: featureData[f].text && featureData[f].text.textAlign || \"center\",\r\n            offsetX: featureData[f].text && featureData[f].text.offsetX || 0,\r\n            offsetY: featureData[f].text && featureData[f].text.offsetY || 0,\r\n            font: featureData[f].text && featureData[f].text.font || '10px sans-serif',\r\n            fill: new Fill({\r\n              color: featureData[f].text && featureData[f].text.color || \"#333\"\r\n            })\r\n          })\r\n        }));\r\n      } \r\n  }\r\n\r\n  _layer.getSource().addFeatures(_features);\r\n}\r\n\r\nlet updateIcon = function(paramObj) {\r\n  if (!paramObj || !paramObj.mapId || !paramObj.layerId) {\r\n    return\r\n  }\r\n\r\n  let iconLayer = getLayer({\r\n    mapId: paramObj.mapId,\r\n    layerId: paramObj.layerId\r\n  })\r\n\r\n  if(!iconLayer) {\r\n    return\r\n  }\r\n\r\n  let features = iconLayer.getSource().getFeatures();\r\n\r\n  //更新样式\r\n  let updatePoint = paramObj.updatePoint\r\n  if(!updatePoint) {\r\n    return\r\n  }\r\n  let style = function (updatePoint) {\r\n    return new Style({\r\n      image: new Icon({\r\n        src: updatePoint.imgPath,\r\n        scale: updatePoint.scale || 1\r\n      }),\r\n      text: new Text({\r\n        text: updatePoint.label,\r\n        textAlign: updatePoint.textAlign || \"center\",\r\n        offsetX: updatePoint.offsetX || 0,\r\n        offsetY: updatePoint.offsetY || 0,\r\n        font: updatePoint.font || '10px sans-serif',\r\n        fill: new Fill({\r\n          color: updatePoint.color || \"#333\"\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  features.forEach((val) => {\r\n    val.setStyle(style(updatePoint))\r\n  })\r\n}\r\n\r\nexport {\r\n  addIcon,\r\n  updateIcon\r\n}","import { createLayer } from './baseLayer';\r\nimport { mapCache } from './../core/cache';\r\nimport { Style, Fill, Stroke, Text } from 'ol/style';\r\nimport Feature from 'ol/Feature';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport LineString from 'ol/geom/LineString';\r\n\r\nfunction addProgressLayer(paramObj) {\r\n  var progressLayer = createLayer(paramObj);\r\n  var mapObj = mapCache.get(paramObj.mapId);\r\n\r\n  var datas = paramObj.datas;\r\n  var _projection = mapObj.getView().getProjection().getCode();\r\n\r\n  var _features = [];\r\n  var feature, geom;\r\n  var styleFunDone = function (styleObj) {\r\n    return new Style({\r\n      stroke: new Stroke({\r\n        color: styleObj.doneColor || \"#24CAD3\",\r\n        width: styleObj.width || 4\r\n      }),\r\n      fill: new Fill({\r\n        color: styleObj.doneColor || \"#24CAD3\"\r\n      })\r\n    })\r\n  }\r\n  var styleFun = function (styleObj) {\r\n    return new Style({\r\n      stroke: new Stroke({\r\n        color: styleObj.undoneColor || \"rgba(62, 145, 193, 0.3)\",\r\n        width: styleObj.width ||  4\r\n      }),\r\n      fill: new Fill({\r\n        color: styleObj.undoneColor || \"rgba(62, 145, 193, 0.3)\"\r\n      }),\r\n      text: new Text({\r\n        text: styleObj.label || \"\",\r\n        textAlign: styleObj.text && styleObj.text.textAlign || \"center\",\r\n        offsetX: styleObj.text && styleObj.text.offsetX || 0,\r\n        offsetY: styleObj.text && styleObj.text.offsetY || 0,\r\n        font: styleObj.text && styleObj.text.font || '10px sans-serif',\r\n        fill: new Fill({\r\n          color: styleObj.text && styleObj.text.color || \"#333\"\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  for (var f = 0; f < datas.length; f++) {\r\n    var _coordinate = datas[f].coordinate;\r\n    if (_projection == 'EPSG:3857') {\r\n      _coordinate = fromLonLat(datas[f].coordinate);\r\n    }\r\n\r\n    for (var p = 0; p < 2; p++) {\r\n      var center = _coordinate;\r\n      var radius = datas[f].radius || 60000;\r\n      var rotation = datas[f].rotation != undefined ? datas[f].rotation : 90;\r\n      var rotation;\r\n      if (p == 0) {\r\n        rotation = 0;\r\n      } else {\r\n        rotation = 360 - rotation;\r\n      }\r\n      var sides = datas[f].sides || 100;\r\n      var angle = Math.PI * 1 / 2;\r\n      if (rotation) {\r\n        angle += (rotation / 180) * Math.PI;\r\n      }\r\n      var rotatedAngle, x, y;\r\n      var points = [];\r\n      for (var i = 0; i < sides; ++i) {\r\n        var an = i * ((360 - rotation) / 360);\r\n        rotatedAngle = angle + (an * 2 * Math.PI / sides);\r\n        x = center[0] + (radius * Math.cos(rotatedAngle));\r\n        y = center[1] + (radius * Math.sin(rotatedAngle));\r\n        points.push([x, y]);\r\n      }\r\n      if (p == 0 || rotation == 0) {\r\n        x = center[0] + (radius * Math.cos(Math.PI * 1 / 2));\r\n        y = center[1] + (radius * Math.sin(Math.PI * 1 / 2));\r\n        points.push([x, y]);\r\n      }\r\n\r\n      geom = new LineString(points);\r\n      feature = new Feature({\r\n        geometry: geom,\r\n        data: datas[f]\r\n      });\r\n\r\n      _features.push(feature);\r\n      if (p == 0) {\r\n        feature.setStyle(styleFun(datas[f]));\r\n      } else {\r\n        if (rotation != 360) {\r\n          feature.setStyle(styleFunDone(datas[f]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  progressLayer.getSource().addFeatures(_features);\r\n}\r\n\r\nexport {\r\n  addProgressLayer\r\n}","/**\n * @module ol/source/CartoDB\n */\n\nimport {assign} from '../obj.js';\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = /*@__PURE__*/(function (XYZ) {\n  function CartoDB(options) {\n    XYZ.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  if ( XYZ ) CartoDB.__proto__ = XYZ;\n  CartoDB.prototype = Object.create( XYZ && XYZ.prototype );\n  CartoDB.prototype.constructor = CartoDB;\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  CartoDB.prototype.getConfig = function getConfig () {\n    return this.config_;\n  };\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  CartoDB.prototype.updateConfig = function updateConfig (config) {\n    assign(this.config_, config);\n    this.initializeMap_();\n  };\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  CartoDB.prototype.setConfig = function setConfig (config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  };\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  CartoDB.prototype.initializeMap_ = function initializeMap_ () {\n    var paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    var client = new XMLHttpRequest();\n    client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  };\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  CartoDB.prototype.handleInitResponse_ = function handleInitResponse_ (paramHash, event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.setState(SourceState.ERROR);\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState(SourceState.READY);\n    } else {\n      this.setState(SourceState.ERROR);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  CartoDB.prototype.handleInitError_ = function handleInitError_ (event) {\n    this.setState(SourceState.ERROR);\n  };\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  CartoDB.prototype.applyTemplate_ = function applyTemplate_ (data) {\n    var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n        '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  };\n\n  return CartoDB;\n}(XYZ));\n\n\nexport default CartoDB;\n\n//# sourceMappingURL=CartoDB.js.map","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = /*@__PURE__*/(function (VectorSource) {\n  function Cluster(options) {\n    VectorSource.call(this, {\n      attributions: options.attributions,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction = options.geometryFunction || function(feature) {\n      var geometry = /** @type {Point} */ (feature.getGeometry());\n      assert(geometry.getType() == GeometryType.POINT,\n        10); // The default `geometryFunction` can only handle `Point` geometries\n      return geometry;\n    };\n\n    /**\n     * @type {VectorSource}\n     * @protected\n     */\n    this.source = options.source;\n\n    listen(this.source, EventType.CHANGE, this.refresh, this);\n  }\n\n  if ( VectorSource ) Cluster.__proto__ = VectorSource;\n  Cluster.prototype = Object.create( VectorSource && VectorSource.prototype );\n  Cluster.prototype.constructor = Cluster;\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  Cluster.prototype.getDistance = function getDistance () {\n    return this.distance;\n  };\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource} Source.\n   * @api\n   */\n  Cluster.prototype.getSource = function getSource () {\n    return this.source;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Cluster.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.clear();\n      this.resolution = resolution;\n      this.cluster();\n      this.addFeatures(this.features);\n    }\n  };\n\n  /**\n   * Set the distance in pixels between clusters.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  Cluster.prototype.setDistance = function setDistance (distance) {\n    this.distance = distance;\n    this.refresh();\n  };\n\n  /**\n   * handle the source changing\n   * @override\n   */\n  Cluster.prototype.refresh = function refresh () {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n    VectorSource.prototype.refresh.call(this);\n  };\n\n  /**\n   * @protected\n   */\n  Cluster.prototype.cluster = function cluster () {\n    if (this.resolution === undefined) {\n      return;\n    }\n    this.features.length = 0;\n    var extent = createEmpty();\n    var mapDistance = this.distance * this.resolution;\n    var features = this.source.getFeatures();\n\n    /**\n     * @type {!Object<string, boolean>}\n     */\n    var clustered = {};\n\n    for (var i = 0, ii = features.length; i < ii; i++) {\n      var feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        var geometry = this.geometryFunction(feature);\n        if (geometry) {\n          var coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          var neighbors = this.source.getFeaturesInExtent(extent);\n          neighbors = neighbors.filter(function(neighbor) {\n            var uid = getUid(neighbor);\n            if (!(uid in clustered)) {\n              clustered[uid] = true;\n              return true;\n            } else {\n              return false;\n            }\n          });\n          this.features.push(this.createCluster(neighbors));\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  Cluster.prototype.createCluster = function createCluster (features) {\n    var centroid = [0, 0];\n    for (var i = features.length - 1; i >= 0; --i) {\n      var geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n\n    var cluster = new Feature(new Point(centroid));\n    cluster.set('features', features);\n    return cluster;\n  };\n\n  return Cluster;\n}(VectorSource));\n\n\nexport default Cluster;\n\n//# sourceMappingURL=Cluster.js.map","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /*@__PURE__*/(function (ImageBase) {\n  function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    var maxSourceExtent = sourceProj.getExtent();\n    var maxTargetExtent = targetProj.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    var errorThresholdInPixels = ERROR_THRESHOLD;\n\n    var triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    var sourceExtent = triangulation.calculateSourceExtent();\n    var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    var state = ImageState.LOADED;\n    if (sourceImage) {\n      state = ImageState.IDLE;\n    }\n    var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    ImageBase.call(this, targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  if ( ImageBase ) ReprojImage.__proto__ = ImageBase;\n  ReprojImage.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ReprojImage.prototype.constructor = ReprojImage;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    ImageBase.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  ReprojImage.prototype.getProjection = function getProjection () {\n    return this.targetProj_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.reproject_ = function reproject_ () {\n    var sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      var width = getWidth(this.targetExtent_) / this.targetResolution_;\n      var height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      var sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.unlistenSource_ = function unlistenSource_ () {\n    unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  };\n\n  return ReprojImage;\n}(ImageBase));\n\n\nexport default ReprojImage;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/Image\n */\nimport {abstract} from '../util.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n\n\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /*@__PURE__*/(function (Event) {\n  function ImageSourceEvent(type, image) {\n\n    Event.call(this, type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n  if ( Event ) ImageSourceEvent.__proto__ = Event;\n  ImageSourceEvent.prototype = Object.create( Event && Event.prototype );\n  ImageSourceEvent.prototype.constructor = ImageSourceEvent;\n\n  return ImageSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @api\n */\nvar ImageSource = /*@__PURE__*/(function (Source) {\n  function ImageSource(options) {\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  if ( Source ) ImageSource.__proto__ = Source;\n  ImageSource.prototype = Object.create( Source && Source.prototype );\n  ImageSource.prototype.constructor = ImageSource;\n\n  /**\n   * @return {Array<number>} Resolutions.\n   * @override\n   */\n  ImageSource.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  ImageSource.prototype.findNearestResolution = function findNearestResolution (resolution) {\n    if (this.resolutions_) {\n      var idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  ImageSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    var sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  ImageSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  ImageSource.prototype.handleImageChange = function handleImageChange (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  };\n\n  return ImageSource;\n}(Source));\n\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n\nexport default ImageSource;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string)} LoadFunction\n * @api\n */\n\n\nvar ImageWrapper = /*@__PURE__*/(function (ImageBase) {\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @protected\n     * @type {ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  if ( ImageBase ) ImageWrapper.__proto__ = ImageBase;\n  ImageWrapper.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageWrapper.prototype.constructor = ImageWrapper;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageWrapper.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  ImageWrapper.prototype.load = function load () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.imageLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  ImageWrapper.prototype.setImage = function setImage (image) {\n    this.image_ = image;\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageWrapper;\n}(ImageBase));\n\n\nexport default ImageWrapper;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = /*@__PURE__*/(function (ImageSource) {\n  function ImageArcGISRest(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageArcGISRest.__proto__ = ImageSource;\n  ImageArcGISRest.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageArcGISRest.prototype.constructor = ImageArcGISRest;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageArcGISRest.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    var params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    extent = extent.slice();\n    var centerX = (extent[0] + extent[2]) / 2;\n    var centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      var halfWidth = this.ratio_ * getWidth(extent) / 2;\n      var halfHeight = this.ratio_ * getHeight(extent) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    var width = Math.ceil(getWidth(extent) / imageResolution);\n    var height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - imageResolution * width / 2;\n    extent[2] = centerX + imageResolution * width / 2;\n    extent[1] = centerY - imageResolution * height / 2;\n    extent[3] = centerY + imageResolution * height / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    var url = this.url_;\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  };\n\n  return ImageArcGISRest;\n}(ImageSource));\n\n\nexport default ImageArcGISRest;\n\n//# sourceMappingURL=ImageArcGISRest.js.map","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport ImageSource from './Image.js';\n\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./State.js\").default} [state] Source state.\n */\n\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = /*@__PURE__*/(function (ImageSource) {\n  function ImageCanvasSource(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state\n    });\n\n    /**\n    * @private\n    * @type {FunctionType}\n    */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n    * @private\n    * @type {import(\"../ImageCanvas.js\").default}\n    */\n    this.canvas_ = null;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.renderedRevision_ = 0;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.ratio_ = options.ratio !== undefined ?\n      options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageCanvasSource.__proto__ = ImageSource;\n  ImageCanvasSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageCanvasSource.prototype.constructor = ImageCanvasSource;\n\n  /**\n  * @inheritDoc\n  */\n  ImageCanvasSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    var canvas = this.canvas_;\n    if (canvas &&\n       this.renderedRevision_ == this.getRevision() &&\n       canvas.getResolution() == resolution &&\n       canvas.getPixelRatio() == pixelRatio &&\n       containsExtent(canvas.getExtent(), extent)) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    var canvasElement = this.canvasFunction_.call(\n      this, extent, resolution, pixelRatio, size, projection);\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  };\n\n  return ImageCanvasSource;\n}(ImageSource));\n\n\nexport default ImageCanvasSource;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport ImageWrapper from '../Image.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = /*@__PURE__*/(function (ImageSource) {\n  function ImageMapGuide(options) {\n\n    ImageSource.call(this, {\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ = options.displayDpi !== undefined ?\n      options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n      options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ = options.useOverlay !== undefined ?\n      options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n  }\n\n  if ( ImageSource ) ImageMapGuide.__proto__ = ImageSource;\n  ImageMapGuide.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageMapGuide.prototype.constructor = ImageMapGuide;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageMapGuide.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageMapGuide.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      var imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n        projection);\n      image = new ImageWrapper(extent, resolution, pixelRatio,\n        imageUrl, this.crossOrigin_,\n        this.imageLoadFunction_);\n      listen(image, EventType.CHANGE,\n        this.handleImageChange, this);\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageMapGuide.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.changed();\n  };\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object<string, string|number>} params Request parameters.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  ImageMapGuide.prototype.getUrl = function getUrl (baseUrl, params, extent, size, projection) {\n    var scale = getScale(extent, size,\n      this.metersPerUnit_, this.displayDpi_);\n    var center = getCenter(extent);\n    var baseParams = {\n      'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1]\n    };\n    assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  };\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  return ImageMapGuide;\n}(ImageSource));\n\n\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  var mcsW = getWidth(extent);\n  var mcsH = getHeight(extent);\n  var devW = size[0];\n  var devH = size[1];\n  var mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\nexport default ImageMapGuide;\n\n//# sourceMappingURL=ImageMapGuide.js.map","/**\n * @module ol/source/ImageStatic\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = /*@__PURE__*/(function (ImageSource) {\n  function Static(options) {\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : null;\n\n    var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined ?\n          options.imageLoadFunction : defaultImageLoadFunction;\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: getProjection(options.projection)\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(this.imageExtent_, undefined, 1, this.url_, crossOrigin, imageLoadFunction);\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  }\n\n  if ( ImageSource ) Static.__proto__ = ImageSource;\n  Static.prototype = Object.create( ImageSource && ImageSource.prototype );\n  Static.prototype.constructor = Static;\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  Static.prototype.getImageExtent = function getImageExtent () {\n    return this.imageExtent_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  };\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  Static.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.handleImageChange = function handleImageChange (evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      var imageExtent = this.image_.getExtent();\n      var image = this.image_.getImage();\n      var imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      var resolution = getHeight(imageExtent) / imageHeight;\n      var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        var context = createCanvasContext2D(targetWidth, imageHeight);\n        var canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight,\n          0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n    ImageSource.prototype.handleImageChange.call(this, evt);\n  };\n\n  return Static;\n}(ImageSource));\n\n\nexport default Static;\n\n//# sourceMappingURL=ImageStatic.js.map","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageWMS = /*@__PURE__*/(function (ImageSource) {\n  function ImageWMS(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageWMS.__proto__ = ImageSource;\n  ImageWMS.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageWMS.prototype.constructor = ImageWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  ImageWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageWMS.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    var center = getCenter(extent);\n    var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    var params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageWMS.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageWMS.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  };\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageWMS.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageWMS.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageWMS.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  ImageWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return ImageWMS;\n}(ImageSource));\n\n\nexport default ImageWMS;\n\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar ImageLayer = /*@__PURE__*/(function (Layer) {\n  function ImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {import(\"../LayerType.js\").default}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n  if ( Layer ) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  return ImageLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {import(\"../source/Image.js\").default} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/Raster\n */\nimport {getUid} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from './Image.js';\nimport SourceState from './State.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = /*@__PURE__*/(function (Event) {\n  function RasterSourceEvent(type, frameState, data) {\n    Event.call(this, type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n\n  }\n\n  if ( Event ) RasterSourceEvent.__proto__ = Event;\n  RasterSourceEvent.prototype = Object.create( Event && Event.prototype );\n  RasterSourceEvent.prototype.constructor = RasterSourceEvent;\n\n  return RasterSourceEvent;\n}(Event));\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires ol/source/Raster~RasterSourceEvent\n * @api\n */\nvar RasterSource = /*@__PURE__*/(function (ImageSource) {\n  function RasterSource(options) {\n    ImageSource.call(this, {\n      projection: null\n    });\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.worker_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ = options.operationType !== undefined ?\n      options.operationType : RasterOperationType.PIXEL;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../renderer/canvas/Layer.js\").default>}\n     */\n    this.renderers_ = createRenderers(options.sources);\n\n    for (var r = 0, rr = this.renderers_.length; r < rr; ++r) {\n      listen(this.renderers_[r], EventType.CHANGE,\n        this.changed, this);\n    }\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(\n      function() {\n        return 1;\n      },\n      this.changed.bind(this));\n\n    var layerStatesArray = getLayerStatesArray(this.renderers_);\n\n    /**\n     * @type {Object<string, import(\"../layer/Layer.js\").State>}\n     */\n    var layerStates = {};\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      extent: null,\n      focus: null,\n      index: 0,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      skippedFeatureUids: {},\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0\n      }),\n      viewHints: [],\n      wantedTiles: {}\n    };\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n\n  }\n\n  if ( ImageSource ) RasterSource.__proto__ = ImageSource;\n  RasterSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  RasterSource.prototype.constructor = RasterSource;\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object=} opt_lib Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  RasterSource.prototype.setOperation = function setOperation (operation, opt_lib) {\n    this.worker_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === RasterOperationType.IMAGE,\n      queue: 1,\n      lib: opt_lib,\n      threads: this.threads_\n    });\n    this.changed();\n  };\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n   * @private\n   */\n  RasterSource.prototype.updateFrameState_ = function updateFrameState_ (extent, resolution, projection) {\n\n    var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n\n    var center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.focus = center;\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Date.now();\n    frameState.animate = false;\n\n    var viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  };\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  RasterSource.prototype.allSourcesReady_ = function allSourcesReady_ () {\n    var ready = true;\n    var source;\n    for (var i = 0, ii = this.renderers_.length; i < ii; ++i) {\n      source = this.renderers_[i].getLayer().getSource();\n      if (source.getState() !== SourceState.READY) {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RasterSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    var frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      var renderedResolution = this.renderedImageCanvas_.getResolution();\n      var renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  };\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  RasterSource.prototype.processSources_ = function processSources_ () {\n    var frameState = this.requestedFrameState_;\n    var len = this.renderers_.length;\n    var imageDatas = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var imageData = getImageData(\n        this.renderers_[i], frameState, frameState.layerStatesArray[i]);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    var data = {};\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n    this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n  };\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object} data The user data.\n   * @private\n   */\n  RasterSource.prototype.onWorkerComplete_ = function onWorkerComplete_ (frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    var extent = frameState.extent;\n    var resolution = frameState.viewState.resolution;\n    if (resolution !== this.requestedFrameState_.viewState.resolution ||\n        !equals(extent, this.requestedFrameState_.extent)) {\n      return;\n    }\n\n    var context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      var width = Math.round(getWidth(extent) / resolution);\n      var height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n  };\n\n  /**\n   * @override\n   */\n  RasterSource.prototype.getImageInternal = function getImageInternal () {\n    return null; // not implemented\n  };\n\n  return RasterSource;\n}(ImageSource));\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {import(\"../renderer/canvas/Layer.js\").default} renderer Layer renderer.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @param {import(\"../layer/Layer.js\").State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  var width = frameState.size[0];\n  var height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    var canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array<import(\"../renderer/canvas/Layer.js\").default>} renderers Layer renderers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../renderer/canvas/Layer.js\").default>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  var len = sources.length;\n  var renderers = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\n */\nfunction createRenderer(layerOrSource) {\n  var tileSource = /** @type {import(\"./Tile.js\").default} */ (layerOrSource);\n  var imageSource = /** @type {import(\"./Image.js\").default} */ (layerOrSource);\n  var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerOrSource);\n  var renderer = null;\n  if (typeof tileSource.getTile === 'function') {\n    renderer = createTileRenderer(tileSource);\n  } else if (typeof imageSource.getImage === 'function') {\n    renderer = createImageRenderer(imageSource);\n  } else if (layer.getType() === LayerType.TILE) {\n    renderer = new CanvasTileLayerRenderer(/** @type {import(\"../layer/Tile.js\").default} */ (layer));\n  } else if (layer.getType() == LayerType.IMAGE || layer.getType() == LayerType.VECTOR) {\n    renderer = new CanvasImageLayerRenderer(/** @type {import(\"../layer/Image.js\").default} */ (layer));\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {import(\"./Image.js\").default} source The source.\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\n */\nfunction createImageRenderer(source) {\n  var layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {import(\"./Tile.js\").default} source The source.\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\n */\nfunction createTileRenderer(source) {\n  var layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\nexport default RasterSource;\n\n//# sourceMappingURL=Raster.js.map","/**\n * @module ol/source/Stamen\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\nimport XYZ from './XYZ.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /*@__PURE__*/(function (XYZ) {\n  function Stamen(options) {\n    var i = options.layer.indexOf('-');\n    var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    var providerConfig = ProviderConfig[provider];\n\n    var layerConfig = LayerConfig[options.layer];\n\n    var url = options.url !== undefined ? options.url :\n      'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n        '/{z}/{x}/{y}.' + layerConfig.extension;\n\n    XYZ.call(this, {\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) Stamen.__proto__ = XYZ;\n  Stamen.prototype = Object.create( XYZ && XYZ.prototype );\n  Stamen.prototype.constructor = Stamen;\n\n  return Stamen;\n}(XYZ));\n\nexport default Stamen;\n\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\n * or if you want to access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n * for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = /*@__PURE__*/(function (TileImage) {\n  function TileArcGISRest(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  if ( TileImage ) TileArcGISRest.__proto__ = TileImage;\n  TileArcGISRest.prototype = Object.create( TileImage && TileImage.prototype );\n  TileArcGISRest.prototype.constructor = TileArcGISRest;\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileArcGISRest.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileArcGISRest.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  };\n\n  return TileArcGISRest;\n}(TileImage));\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileArcGISRest}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileExtent = tileGrid.getTileCoordExtent(\n    tileCoord, this.tmpExtent_);\n  var tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  // Apply default params and override with user specified values.\n  var baseParams = {\n    'F': 'image',\n    'FORMAT': 'PNG32',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileArcGISRest;\n\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/TileDebug\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport TileSource from './Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\nvar LabeledTile = /*@__PURE__*/(function (Tile) {\n  function LabeledTile(tileCoord, tileSize, text) {\n\n    Tile.call(this, tileCoord, TileState.LOADED);\n\n    /**\n    * @private\n    * @type {import(\"../size.js\").Size}\n    */\n    this.tileSize_ = tileSize;\n\n    /**\n    * @private\n    * @type {string}\n    */\n    this.text_ = text;\n\n    /**\n    * @private\n    * @type {HTMLCanvasElement}\n    */\n    this.canvas_ = null;\n\n  }\n\n  if ( Tile ) LabeledTile.__proto__ = Tile;\n  LabeledTile.prototype = Object.create( Tile && Tile.prototype );\n  LabeledTile.prototype.constructor = LabeledTile;\n\n  /**\n  * Get the image element for this tile.\n  * @return {HTMLCanvasElement} Image.\n  */\n  LabeledTile.prototype.getImage = function getImage () {\n    if (this.canvas_) {\n      return this.canvas_;\n    } else {\n      var tileSize = this.tileSize_;\n      var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n      context.strokeStyle = 'black';\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n      context.fillStyle = 'black';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = '24px sans-serif';\n      context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\n\n      this.canvas_ = context.canvas;\n      return context.canvas;\n    }\n  };\n\n  /**\n  * @override\n  */\n  LabeledTile.prototype.load = function load () {};\n\n  return LabeledTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = /*@__PURE__*/(function (TileSource) {\n  function TileDebug(options) {\n\n    TileSource.call(this, {\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n  }\n\n  if ( TileSource ) TileDebug.__proto__ = TileSource;\n  TileDebug.prototype = Object.create( TileSource && TileSource.prototype );\n  TileDebug.prototype.constructor = TileDebug;\n\n  /**\n  * @inheritDoc\n  */\n  TileDebug.prototype.getTile = function getTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n    } else {\n      var tileSize = toSize(this.tileGrid.getTileSize(z));\n      var tileCoord = [z, x, y];\n      var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n      var text = !textTileCoord ? '' :\n        this.getTileCoordForTileUrlFunction(textTileCoord).toString();\n      var tile = new LabeledTile(tileCoord, tileSize, text);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n  return TileDebug;\n}(TileSource));\n\n\nexport default TileDebug;\n\n//# sourceMappingURL=TileDebug.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See http://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /*@__PURE__*/(function (TileImage) {\n  function TileJSON(options) {\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileImage ) TileJSON.__proto__ = TileImage;\n  TileJSON.prototype = Object.create( TileImage && TileImage.prototype );\n  TileJSON.prototype.constructor = TileJSON;\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  TileJSON.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  TileJSON.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  TileJSON.prototype.getTileJSON = function getTileJSON () {\n    return this.tileJSON_;\n  };\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  TileJSON.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON['bounds'] !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    var minZoom = tileJSON['minzoom'] || 0;\n    var maxZoom = tileJSON['maxzoom'] || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  };\n\n  /**\n   * @protected\n   */\n  TileJSON.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n  return TileJSON;\n}(TileImage));\n\n\nexport default TileJSON;\n\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileSource from './Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\n\nexport var CustomTile = /*@__PURE__*/(function (Tile) {\n  function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n\n    Tile.call(this, tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n\n  }\n\n  if ( Tile ) CustomTile.__proto__ = Tile;\n  CustomTile.prototype = Object.create( Tile && Tile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  CustomTile.prototype.getImage = function getImage () {\n    return null;\n  };\n\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  CustomTile.prototype.getData = function getData (coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    var xRelative = (coordinate[0] - this.extent_[0]) /\n        (this.extent_[2] - this.extent_[0]);\n    var yRelative = (coordinate[1] - this.extent_[1]) /\n        (this.extent_[3] - this.extent_[1]);\n\n    var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    var code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    var data = null;\n    if (code in this.keys_) {\n      var id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  };\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(this: T, *)} callback Callback.\n   * @param {T=} opt_this The object to use as `this` in the callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @template T\n   */\n  CustomTile.prototype.forDataAtCoordinate = function forDataAtCoordinate (coordinate, callback, opt_this, opt_request) {\n    if (this.state == TileState.IDLE && opt_request === true) {\n      listenOnce(this, EventType.CHANGE, function(e) {\n        callback.call(opt_this, this.getData(coordinate));\n      }, this);\n      this.loadInternal_();\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback.call(opt_this, this.getData(coordinate));\n        }.bind(this), 0);\n      } else {\n        callback.call(opt_this, this.getData(coordinate));\n      }\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  CustomTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n\n  /**\n   * @private\n   */\n  CustomTile.prototype.handleError_ = function handleError_ () {\n    this.state = TileState.ERROR;\n    this.changed();\n  };\n\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  CustomTile.prototype.handleLoad_ = function handleLoad_ (json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.EMPTY;\n    this.changed();\n  };\n\n\n  /**\n   * @private\n   */\n  CustomTile.prototype.loadInternal_ = function loadInternal_ () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(this.src_, this.handleLoad_.bind(this),\n          this.handleError_.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  CustomTile.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  CustomTile.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleError_();\n  };\n\n\n  /**\n   * @override\n   */\n  CustomTile.prototype.load = function load () {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    }\n  };\n\n  return CustomTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = /*@__PURE__*/(function (TileSource) {\n  function UTFGrid(options) {\n    TileSource.call(this, {\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = options.preemptive !== undefined ?\n      options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileSource ) UTFGrid.__proto__ = TileSource;\n  UTFGrid.prototype = Object.create( TileSource && TileSource.prototype );\n  UTFGrid.prototype.constructor = UTFGrid;\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  UTFGrid.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  UTFGrid.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  UTFGrid.prototype.getTemplate = function getTemplate () {\n    return this.template_;\n  };\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*)} callback Callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  UTFGrid.prototype.forDataAtCoordinateAndResolution = function forDataAtCoordinateAndResolution (\n    coordinate, resolution, callback, opt_request) {\n    if (this.tileGrid) {\n      var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n        coordinate, resolution);\n      var tile = /** @type {!CustomTile} */(this.getTile(\n        tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n      tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  };\n\n\n  /**\n   * @protected\n   */\n  UTFGrid.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  UTFGrid.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON['bounds'] !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    var minZoom = tileJSON['minzoom'] || 0;\n    var maxZoom = tileJSON['maxzoom'] || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    var grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState(SourceState.READY);\n\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  UTFGrid.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      var tileCoord = [z, x, y];\n      var urlTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n      var tile = new CustomTile(\n        tileCoord,\n        tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n        tileUrl !== undefined ? tileUrl : '',\n        this.tileGrid.getTileCoordExtent(tileCoord),\n        this.preemptive_,\n        this.jsonp_);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  UTFGrid.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UTFGrid;\n}(TileSource));\n\n\nexport default UTFGrid;\n\n//# sourceMappingURL=UTFGrid.js.map","/**\n * @module ol/VectorImageTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {VOID} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\nvar VectorImageTile = /*@__PURE__*/(function (Tile) {\n  function VectorImageTile(tileCoord, state, sourceRevision, format, tileLoadFunction,\n    urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid, sourceTiles,\n    pixelRatio, projection, tileClass, handleTileChange, zoom) {\n\n    Tile.call(this, tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles_ = sourceTiles;\n\n    /**\n     * Keys of source tiles used by this tile. Use with {@link #getTile}.\n     * @type {Array<string>}\n     */\n    this.tileKeys = [];\n\n    /**\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @type {number}\n     */\n    this.sourceRevision_ = sourceRevision;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n\n    /**\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.loadListenerKeys_ = [];\n\n    /**\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.sourceTileListenerKeys_ = [];\n\n    if (urlTileCoord) {\n      var extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      var resolution = tileGrid.getResolution(zoom);\n      var sourceZ = sourceTileGrid.getZForResolution(resolution);\n      var useLoadedOnly = zoom != tileCoord[0];\n      var loadCount = 0;\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n        var sharedExtent = getIntersection(extent,\n          sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n        var sourceExtent = sourceTileGrid.getExtent();\n        if (sourceExtent) {\n          sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n        }\n        if (getWidth(sharedExtent) / resolution >= 0.5 &&\n            getHeight(sharedExtent) / resolution >= 0.5) {\n          // only include source tile if overlap is at least 1 pixel\n          ++loadCount;\n          var sourceTileKey = sourceTileCoord.toString();\n          var sourceTile = sourceTiles[sourceTileKey];\n          if (!sourceTile && !useLoadedOnly) {\n            var tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n            sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n              tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n              tileUrl == undefined ? '' : tileUrl,\n              format, tileLoadFunction);\n            this.sourceTileListenerKeys_.push(\n              listen(sourceTile, EventType.CHANGE, handleTileChange));\n          }\n          if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n            sourceTile.consumers++;\n            this.tileKeys.push(sourceTileKey);\n          }\n        }\n      }.bind(this));\n\n      if (useLoadedOnly && loadCount == this.tileKeys.length) {\n        this.finishLoading_();\n      }\n\n      if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n        while (zoom > tileGrid.getMinZoom()) {\n          var tile = new VectorImageTile(tileCoord, state, sourceRevision,\n            format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n            sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n            tileClass, VOID, --zoom);\n          if (tile.state == TileState.LOADED) {\n            this.interimTile = tile;\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n  if ( Tile ) VectorImageTile.__proto__ = Tile;\n  VectorImageTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorImageTile.prototype.constructor = VectorImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.disposeInternal = function disposeInternal () {\n    this.state = TileState.ABORT;\n    this.changed();\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n\n    for (var i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n      var sourceTileKey = this.tileKeys[i];\n      var sourceTile = this.getTile(sourceTileKey);\n      sourceTile.consumers--;\n      if (sourceTile.consumers == 0) {\n        delete this.sourceTiles_[sourceTileKey];\n        sourceTile.dispose();\n      }\n    }\n    this.tileKeys.length = 0;\n    this.sourceTiles_ = null;\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.sourceTileListenerKeys_.forEach(unlistenByKey);\n    this.sourceTileListenerKeys_.length = 0;\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  VectorImageTile.prototype.getContext = function getContext (layer) {\n    var key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D();\n    }\n    return this.context_[key];\n  };\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  VectorImageTile.prototype.getImage = function getImage (layer) {\n    return this.getReplayState(layer).renderedTileRevision == -1 ?\n      null : this.getContext(layer).canvas;\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  VectorImageTile.prototype.getReplayState = function getReplayState (layer) {\n    var key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedRevision: -1,\n        renderedTileRevision: -1\n      };\n    }\n    return this.replayState_[key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.getKey = function getKey () {\n    return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n  };\n\n  /**\n   * @param {string} tileKey Key (tileCoord) of the source tile.\n   * @return {import(\"./VectorTile.js\").default} Source tile.\n   */\n  VectorImageTile.prototype.getTile = function getTile (tileKey) {\n    return this.sourceTiles_[tileKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.load = function load () {\n    // Source tiles with LOADED state - we just count them because once they are\n    // loaded, we're no longer listening to state changes.\n    var leftToLoad = 0;\n    // Source tiles with ERROR state - we track them because they can still have\n    // an ERROR state after another load attempt.\n    var errorSourceTiles = {};\n\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n    }\n    if (this.state == TileState.LOADING) {\n      this.tileKeys.forEach(function(sourceTileKey) {\n        var sourceTile = this.getTile(sourceTileKey);\n        if (sourceTile.state == TileState.IDLE) {\n          sourceTile.setLoader(this.loader_);\n          sourceTile.load();\n        }\n        if (sourceTile.state == TileState.LOADING) {\n          var key = listen(sourceTile, EventType.CHANGE, function(e) {\n            var state = sourceTile.getState();\n            if (state == TileState.LOADED ||\n                state == TileState.ERROR) {\n              var uid = getUid(sourceTile);\n              if (state == TileState.ERROR) {\n                errorSourceTiles[uid] = true;\n              } else {\n                --leftToLoad;\n                delete errorSourceTiles[uid];\n              }\n              if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n                this.finishLoading_();\n              }\n            }\n          }.bind(this));\n          this.loadListenerKeys_.push(key);\n          ++leftToLoad;\n        }\n      }.bind(this));\n    }\n    if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n      setTimeout(this.finishLoading_.bind(this), 0);\n    }\n  };\n\n  /**\n   * @private\n   */\n  VectorImageTile.prototype.finishLoading_ = function finishLoading_ () {\n    var loaded = this.tileKeys.length;\n    var empty = 0;\n    for (var i = loaded - 1; i >= 0; --i) {\n      var state = this.getTile(this.tileKeys[i]).getState();\n      if (state != TileState.LOADED) {\n        --loaded;\n      }\n      if (state == TileState.EMPTY) {\n        ++empty;\n      }\n    }\n    if (loaded == this.tileKeys.length) {\n      this.loadListenerKeys_.forEach(unlistenByKey);\n      this.loadListenerKeys_.length = 0;\n      this.setState(TileState.LOADED);\n    } else {\n      this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n    }\n  };\n\n  return VectorImageTile;\n}(Tile));\n\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"./VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n\n//# sourceMappingURL=VectorImageTile.js.map","/**\n * @module ol/VectorTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @const\n * @type {import(\"./extent.js\").Extent}\n */\nvar DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\nvar VectorTile = /*@__PURE__*/(function (Tile) {\n  function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @type {number}\n     */\n    this.consumers = 0;\n\n    /**\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Data projection\n     * @private\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"./render/ReplayGroup.js\").default>}\n     */\n    this.replayGroups_ = {};\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n  }\n\n  if ( Tile ) VectorTile.__proto__ = Tile;\n  VectorTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.disposeInternal = function disposeInternal () {\n    this.features_ = null;\n    this.replayGroups_ = {};\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Gets the extent of the vector tile.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @api\n   */\n  VectorTile.prototype.getExtent = function getExtent () {\n    return this.extent_ || DEFAULT_EXTENT;\n  };\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  VectorTile.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n  /**\n   * Get the features for this tile. Geometries will be in the projection returned\n   * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  VectorTile.prototype.getFeatures = function getFeatures () {\n    return this.features_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getKey = function getKey () {\n    return this.url_;\n  };\n\n  /**\n   * Get the feature projection of features returned by\n   * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n   * @return {import(\"./proj/Projection.js\").default} Feature projection.\n   * @api\n   */\n  VectorTile.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @param {string} key Key.\n   * @return {import(\"./render/ReplayGroup.js\").default} Replay group.\n   */\n  VectorTile.prototype.getReplayGroup = function getReplayGroup (layer, key) {\n    return this.replayGroups_[getUid(layer) + ',' + key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      this.loader_(null, NaN, null);\n    }\n  };\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   */\n  VectorTile.prototype.onLoad = function onLoad (features, dataProjection, extent) {\n    this.setProjection(dataProjection);\n    this.setFeatures(features);\n    this.setExtent(extent);\n  };\n\n  /**\n   * Handler for tile load errors.\n   */\n  VectorTile.prototype.onError = function onError () {\n    this.setState(TileState.ERROR);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n   * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n   * for tiles in projections with `tile-pixels` as units. The extent should be\n   * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n   * calculated by multiplying the tile size with the tile pixel ratio. For\n   * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n   * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n   * extent. The default is `[0, 0, 4096, 4096]`.\n   * @param {import(\"./extent.js\").Extent} extent The extent.\n   * @api\n   */\n  VectorTile.prototype.setExtent = function setExtent (extent) {\n    this.extent_ = extent;\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  VectorTile.prototype.setFeatures = function setFeatures (features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the projection of the features that were added with\n   * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n   * @param {import(\"./proj/Projection.js\").default} projection Feature projection.\n   * @api\n   */\n  VectorTile.prototype.setProjection = function setProjection (projection) {\n    this.projection_ = projection;\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @param {string} key Key.\n   * @param {import(\"./render/ReplayGroup.js\").default} replayGroup Replay group.\n   */\n  VectorTile.prototype.setReplayGroup = function setReplayGroup (layer, key, replayGroup) {\n    this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\n  };\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  VectorTile.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorTile;\n}(Tile));\n\nexport default VectorTile;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/VectorTile\n */\n\nimport TileState from '../TileState.js';\nimport VectorImageTile, {defaultLoadFunction} from '../VectorImageTile.js';\nimport Tile from '../VectorTile.js';\nimport {toSize} from '../size.js';\nimport UrlTile from './UrlTile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection, createForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=128] Cache size.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function() {\n *     var data = // ... fetch data\n *     var format = tile.getFormat();\n *     tile.setProjection(format.readProjection(data));\n *     tile.setFeatures(format.readFeatures(data, {\n *       // featureProjection is not required for ol/format/MVT\n *       featureProjection: map.getView().getProjection()\n *     }));\n *     // the line below is only required for ol/format/MVT\n *     tile.setExtent(format.getLastExtent());\n *   }\n * });\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar VectorTile = /*@__PURE__*/(function (UrlTile) {\n  function VectorTile(options) {\n    var projection = options.projection || 'EPSG:3857';\n\n    var extent = options.extent || extentFromProjection(projection);\n\n    var tileGrid = options.tileGrid || createXYZ({\n      extent: extent,\n      maxZoom: options.maxZoom || 22,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize || 512\n    });\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize !== undefined ? options.cacheSize : 128,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n       * @private\n       * @type {Object<string, Tile>}\n       */\n    this.sourceTiles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n\n  }\n\n  if ( UrlTile ) VectorTile.__proto__ = UrlTile;\n  VectorTile.prototype = Object.create( UrlTile && UrlTile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorTile.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  VectorTile.prototype.clear = function clear () {\n    this.tileCache.clear();\n    this.sourceTiles_ = {};\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      var tileCoord = [z, x, y];\n      var urlTileCoord = this.getTileCoordForTileUrlFunction(\n        tileCoord, projection);\n      var tile = new VectorImageTile(\n        tileCoord,\n        urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY,\n        this.getRevision(),\n        this.format_, this.tileLoadFunction, urlTileCoord, this.tileUrlFunction,\n        this.tileGrid, this.getTileGridForProjection(projection),\n        this.sourceTiles_, pixelRatio, projection, this.tileClass,\n        this.handleTileChange.bind(this), tileCoord[0]);\n\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTileGridForProjection = function getTileGridForProjection (projection) {\n    var code = projection.getCode();\n    var tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      var sourceTileGrid = this.tileGrid;\n      tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined,\n        sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n    }\n    return tileGrid;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return pixelRatio;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n  };\n\n  return VectorTile;\n}(UrlTile));\n\n\nexport default VectorTile;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /*@__PURE__*/(function (TileGrid) {\n  function WMTSTileGrid(options) {\n    TileGrid.call(this, {\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  if ( TileGrid ) WMTSTileGrid.__proto__ = TileGrid;\n  WMTSTileGrid.prototype = Object.create( TileGrid && TileGrid.prototype );\n  WMTSTileGrid.prototype.constructor = WMTSTileGrid;\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  WMTSTileGrid.prototype.getMatrixId = function getMatrixId (z) {\n    return this.matrixIds_[z];\n  };\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  WMTSTileGrid.prototype.getMatrixIds = function getMatrixIds () {\n    return this.matrixIds_;\n  };\n\n  return WMTSTileGrid;\n}(TileGrid));\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array<number>} */\n  var resolutions = [];\n  /** @type {!Array<string>} */\n  var matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  var origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /*@__PURE__*/(function (TileImage) {\n  function WMTS(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    var requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    var tileGrid = options.tileGrid;\n\n    var urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  if ( TileImage ) WMTS.__proto__ = TileImage;\n  WMTS.prototype = Object.create( TileImage && TileImage.prototype );\n  WMTS.prototype.constructor = WMTS;\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @override\n   */\n  WMTS.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n  };\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  WMTS.prototype.getDimensions = function getDimensions () {\n    return this.dimensions_;\n  };\n\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  WMTS.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  WMTS.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  WMTS.prototype.getMatrixSet = function getMatrixSet () {\n    return this.matrixSet_;\n  };\n\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  WMTS.prototype.getRequestEncoding = function getRequestEncoding () {\n    return this.requestEncoding_;\n  };\n\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  WMTS.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  WMTS.prototype.getVersion = function getVersion () {\n    return this.version_;\n  };\n\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  WMTS.prototype.getKeyForDimensions_ = function getKeyForDimensions_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  };\n\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  WMTS.prototype.updateDimensions = function updateDimensions (dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  };\n\n  return WMTS;\n}(TileImage));\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          var tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          var supportedCRS = tileMatrixSet['SupportedCRS'];\n          var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          var proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  var matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  var matrixLimits = /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    var projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  var requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n    this.tileGrid);\n  var dimensions = this.dimensions_;\n\n  return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, dimensions);\n        var url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\nexport var CustomTile = /*@__PURE__*/(function (ImageTile) {\n  function CustomTile(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    ImageTile.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n\n  }\n\n  if ( ImageTile ) CustomTile.__proto__ = ImageTile;\n  CustomTile.prototype = Object.create( ImageTile && ImageTile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  /**\n   * @inheritDoc\n   */\n  CustomTile.prototype.getImage = function getImage () {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    var image = ImageTile.prototype.getImage.call(this);\n    if (this.state == TileState.LOADED) {\n      var tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      } else {\n        var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n        context.drawImage(image, 0, 0);\n        this.zoomifyImage_ = context.canvas;\n        return context.canvas;\n      }\n    } else {\n      return image;\n    }\n  };\n\n  return CustomTile;\n}(ImageTile));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} [size] Size of the image.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = /*@__PURE__*/(function (TileImage) {\n  function Zoomify(opt_options) {\n\n    var options = opt_options || {};\n\n    var size = options.size;\n    var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n      options.tierSizeCalculation :\n      TierSizeCalculation.DEFAULT;\n\n    var imageWidth = size[0];\n    var imageHeight = size[1];\n    var extent = options.extent || [0, -size[1], size[0], 0];\n    var tierSizeInTiles = [];\n    var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    var tileSizeForTierSizeCalculation = tileSize;\n\n    switch (tierSizeCalculation) {\n      case TierSizeCalculation.DEFAULT:\n        while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case TierSizeCalculation.TRUNCATED:\n        var width = imageWidth;\n        var height = imageHeight;\n        while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation)\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default:\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    var resolutions = [1];\n    var tileCountUpToTier = [0];\n    for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(1 << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    var tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions\n    });\n\n    var url = options.url;\n    if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    var urls = expandUrl(url);\n\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n\n      return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            var tileCoordZ = tileCoord[0];\n            var tileCoordX = tileCoord[1];\n            var tileCoordY = -tileCoord[2] - 1;\n            var tileIndex =\n                tileCoordX +\n                tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            var tileSize = tileGrid.getTileSize(tileCoordZ);\n            var tileWidth = Array.isArray(tileSize) ? tileSize[0] : tileSize;\n            var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n            var localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n    var ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition\n    });\n\n  }\n\n  if ( TileImage ) Zoomify.__proto__ = TileImage;\n  Zoomify.prototype = Object.create( TileImage && TileImage.prototype );\n  Zoomify.prototype.constructor = Zoomify;\n\n  return Zoomify;\n}(TileImage));\n\nexport default Zoomify;\n\n//# sourceMappingURL=Zoomify.js.map","/**\n * @module ol/source\n */\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n\n//# sourceMappingURL=source.js.map","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nvar getChangeType = (function() {\n  var changeType;\n  return function() {\n    if (!changeType) {\n      var body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = /*@__PURE__*/(function (Control) {\n  function FullScreen(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    var label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    listen(this.button_, EventType.CLICK,\n      this.handleClick_, this);\n\n    var cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  if ( Control ) FullScreen.__proto__ = Control;\n  FullScreen.prototype = Object.create( Control && Control.prototype );\n  FullScreen.prototype.constructor = FullScreen;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  FullScreen.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreen_ = function handleFullScreen_ () {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    var map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      var element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreenChange_ = function handleFullScreenChange_ () {\n    var map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  };\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  FullScreen.prototype.setClassName_ = function setClassName_ (element, fullscreen) {\n    var activeClassName = this.cssClassName_ + '-true';\n    var inactiveClassName = this.cssClassName_ + '-false';\n    var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(activeClassName);\n    element.classList.remove(inactiveClassName);\n    element.classList.add(nextClassName);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  FullScreen.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  };\n\n  return FullScreen;\n}(Control));\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  var body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n\n//# sourceMappingURL=FullScreen.js.map","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = /*@__PURE__*/(function (Control) {\n  function OverviewMap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {import(\"../Map.js\").default}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    var ovmap = this.ovmap_;\n\n    if (options.layers) {\n      /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\n        /**\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    var box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    var scope = this;\n\n    var overlay = this.boxOverlay_;\n    var overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    var computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    var move = function(event) {\n      var position = /** @type {?} */ (computeDesiredMousePosition(event));\n      var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n\n      overlay.setPosition(coordinates);\n    };\n\n    var endMoving = function(event) {\n      var coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  if ( Control ) OverviewMap.__proto__ = Control;\n  OverviewMap.prototype = Object.create( Control && Control.prototype );\n  OverviewMap.prototype.constructor = OverviewMap;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  OverviewMap.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      var oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    Control.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      // TODO: to really support map switching, this would need to be reworked\n      if (this.ovmap_.getLayers().getLength() === 0) {\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\n      }\n\n      var view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  OverviewMap.prototype.handleMapPropertyChange_ = function handleMapPropertyChange_ (event) {\n    if (event.key === MapProperty.VIEW) {\n      var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      var newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  };\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.bindView_ = function bindView_ (view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.unbindView_ = function unbindView_ (view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  OverviewMap.prototype.handleRotationChanged_ = function handleRotationChanged_ () {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  };\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  OverviewMap.prototype.validateExtent_ = function validateExtent_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    var ovview = ovmap.getView();\n    var ovextent = ovview.calculateExtent(ovmapSize);\n\n    var topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    var bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    var ovmapWidth = ovmapSize[0];\n    var ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  };\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  OverviewMap.prototype.resetExtent_ = function resetExtent_ () {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    var steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  };\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  OverviewMap.prototype.recenter_ = function recenter_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  };\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  OverviewMap.prototype.updateBox_ = function updateBox_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    var rotation = view.getRotation();\n\n    var overlay = this.boxOverlay_;\n    var box = this.boxOverlay_.getElement();\n    var extent = view.calculateExtent(mapSize);\n    var ovresolution = ovview.getResolution();\n    var bottomLeft = getBottomLeft(extent);\n    var topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  OverviewMap.prototype.calculateCoordinateRotate_ = function calculateCoordinateRotate_ (rotation, coordinate) {\n    var coordinateRotate;\n\n    var map = this.getMap();\n    var view = map.getView();\n\n    var currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  OverviewMap.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  OverviewMap.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    var ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  };\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  OverviewMap.prototype.getOverviewMap = function getOverviewMap () {\n    return this.ovmap_;\n  };\n\n  return OverviewMap;\n}(Control));\n\n\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n\n//# sourceMappingURL=OverviewMap.js.map","/**\n * @module ol/control/ZoomSlider\n */\nimport ViewHint from '../ViewHint.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = /*@__PURE__*/(function (Control) {\n  function ZoomSlider(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n      * @type {!Array.<import(\"../events.js\").EventsKey>}\n      * @private\n      */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    var thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    var containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    /**\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.dragger_ = new PointerEventHandler(containerElement);\n\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_, this);\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_, this);\n    listen(this.dragger_, PointerEventType.POINTERUP,\n      this.handleDraggerEnd_, this);\n\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n    listen(thumbElement, EventType.CLICK, stopPropagation);\n  }\n\n  if ( Control ) ZoomSlider.__proto__ = Control;\n  ZoomSlider.prototype = Object.create( Control && Control.prototype );\n  ZoomSlider.prototype.constructor = ZoomSlider;\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.disposeInternal = function disposeInternal () {\n    this.dragger_.dispose();\n    Control.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      map.render();\n    }\n  };\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  ZoomSlider.prototype.initSlider_ = function initSlider_ () {\n    var container = this.element;\n    var containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    var computedStyle = getComputedStyle(thumb);\n    var thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    var thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  };\n\n  /**\n   * @param {MouseEvent} event The browser event to handle.\n   * @private\n   */\n  ZoomSlider.prototype.handleContainerClick_ = function handleContainerClick_ (event) {\n    var view = this.getMap().getView();\n\n    var relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    var resolution = this.getResolutionForPosition_(relativePosition);\n\n    view.animate({\n      resolution: view.constrainResolution(resolution),\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n\n  /**\n   * Handle dragger start events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerStart_ = function handleDraggerStart_ (event) {\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        var drag = this.handleDraggerDrag_;\n        var end = this.handleDraggerEnd_;\n        this.dragListenerKeys_.push(\n          listen(document, EventType.MOUSEMOVE, drag, this),\n          listen(document, PointerEventType.POINTERMOVE, drag, this),\n          listen(document, EventType.MOUSEUP, end, this),\n          listen(document, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerDrag_ = function handleDraggerDrag_ (event) {\n    if (this.dragging_) {\n      var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      var deltaX = event.clientX - this.previousX_ + parseFloat(element.style.left);\n      var deltaY = event.clientY - this.previousY_ + parseFloat(element.style.top);\n      var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n      this.setThumbPosition_(this.currentResolution_);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n    }\n  };\n\n  /**\n   * Handle dragger end events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerEnd_ = function handleDraggerEnd_ (event) {\n    if (this.dragging_) {\n      var view = this.getMap().getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n\n      view.animate({\n        resolution: view.constrainResolution(this.currentResolution_),\n        duration: this.duration_,\n        easing: easeOut\n      });\n\n      this.dragging_ = false;\n      this.previousX_ = undefined;\n      this.previousY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  };\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  ZoomSlider.prototype.setThumbPosition_ = function setThumbPosition_ (res) {\n    var position = this.getPositionForResolution_(res);\n    var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  };\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  ZoomSlider.prototype.getRelativePosition_ = function getRelativePosition_ (x, y) {\n    var amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  };\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  ZoomSlider.prototype.getResolutionForPosition_ = function getResolutionForPosition_ (position) {\n    var fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  };\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  ZoomSlider.prototype.getPositionForResolution_ = function getPositionForResolution_ (res) {\n    var fn = this.getMap().getView().getValueForResolutionFunction();\n    return 1 - fn(res);\n  };\n\n  return ZoomSlider;\n}(Control));\n\n\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  var res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\nexport default ZoomSlider;\n\n//# sourceMappingURL=ZoomSlider.js.map","/**\n * @module ol/control/ZoomToExtent\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /*@__PURE__*/(function (Control) {\n  function ZoomToExtent(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  if ( Control ) ZoomToExtent.__proto__ = Control;\n  ZoomToExtent.prototype = Object.create( Control && Control.prototype );\n  ZoomToExtent.prototype.constructor = ZoomToExtent;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  ZoomToExtent.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n\n  /**\n   * @protected\n   */\n  ZoomToExtent.prototype.handleZoomToExtent = function handleZoomToExtent () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fit(extent);\n  };\n\n  return ZoomToExtent;\n}(Control));\n\nexport default ZoomToExtent;\n\n//# sourceMappingURL=ZoomToExtent.js.map","/**\n * @module ol/control\n */\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\nexport {defaults} from './control/util.js';\n\n//# sourceMappingURL=control.js.map"],"sourceRoot":""}